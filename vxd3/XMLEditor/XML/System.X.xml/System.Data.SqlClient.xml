<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>System.Data.SqlClient</name>
	</assembly>
	<members>
		<member name="N:System.Data.SqlClient">
			<summary>The <see cref="N:System.Data.SqlClient"></see> namespace is the.NET Framework Data Provider for SQL Server.</summary>
		</member>
		<member name="T:System.Data.SqlClient.SqlCommand">
			<summary>Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand"></see> class.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand"></see> class with the text of the query.</summary>
			<param name="cmdText">The text of the query. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand"></see> class with the text of the query and a <see cref="T:System.Data.SqlClient.SqlConnection"></see>.</summary>
			<param name="cmdText">The text of the query. </param>
			<param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection"></see> that represents the connection to an instance of SQL Server. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand"></see> class with the text of the query, a <see cref="T:System.Data.SqlClient.SqlConnection"></see>, and the <see cref="T:System.Data.SqlClient.SqlTransaction"></see>.</summary>
			<param name="cmdText">The text of the query. </param>
			<param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection"></see> that represents the connection to an instance of SQL Server. </param>
			<param name="transaction">The <see cref="T:System.Data.SqlClient.SqlTransaction"></see> in which the <see cref="T:System.Data.SqlClient.SqlCommand"></see> executes. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.Cancel">
			<summary>Tries to cancel the execution of a <see cref="T:System.Data.SqlClient.SqlCommand"></see>.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.CreateParameter">
			<summary>Creates a new instance of a <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.</returns>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
			<summary>Executes a Transact-SQL statement against the connection and returns the number of rows affected.</summary>
			<returns>The number of rows affected.</returns>
			<exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
			<summary>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText"></see> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection"></see> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlDataReader"></see> object.</returns>
			<exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0. </exception>
			<exception cref="T:System.Exception">The command could not be executed. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
			<summary>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText"></see> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection"></see>, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader"></see> using one of the <see cref="T:System.Data.CommandBehavior"></see> values.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlDataReader"></see> object.</returns>
			<param name="behavior">One of the <see cref="T:System.Data.CommandBehavior"></see> values. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
			<summary>Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.</summary>
			<returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
			<exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
			<summary>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText"></see> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection"></see> and builds an <see cref="T:System.Xml.XmlReader"></see> object.</summary>
			<returns>An <see cref="T:System.Xml.XmlReader"></see> object.</returns>
			<exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.Prepare">
			<summary>Creates a prepared version of the command on an instance of SQL Server.</summary>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.SqlClient.SqlCommand.Connection"></see> is not set.-or- The <see cref="P:System.Data.SqlClient.SqlCommand.Connection"></see> is not <see cref="M:System.Data.SqlClient.SqlConnection.Open"></see>. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
			<summary>Resets the <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout"></see> property to its default value.</summary>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommand.CommandText">
			<summary>Gets or sets the Transact-SQL statement or stored procedure to execute at the data source.</summary>
			<returns>The Transact-SQL statement or stored procedure to execute. The default is an empty string.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
			<summary>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</summary>
			<returns>The time in seconds to wait for the command to execute. The default is 30 seconds.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommand.CommandType">
			<summary>Gets or sets a value indicating how the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText"></see> property is to be interpreted.</summary>
			<returns>One of the <see cref="T:System.Data.CommandType"></see> values. The default is Text.</returns>
			<exception cref="T:System.ArgumentException">The value was not a valid <see cref="T:System.Data.CommandType"></see>. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommand.Connection">
			<summary>Gets or sets the <see cref="T:System.Data.SqlClient.SqlConnection"></see> used by this instance of the <see cref="T:System.Data.SqlClient.SqlCommand"></see>.</summary>
			<returns>The connection to a data source. The default value is null.</returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.SqlClient.SqlCommand.Connection"></see> property was changed while a transaction was in progress. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommand.Parameters">
			<summary>Gets the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</summary>
			<returns>The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommand.Transaction">
			<summary>Gets or sets the <see cref="T:System.Data.SqlClient.SqlTransaction"></see> within which the <see cref="T:System.Data.SqlClient.SqlCommand"></see> executes.</summary>
			<returns>The <see cref="T:System.Data.SqlClient.SqlTransaction"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
			<summary>Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow"></see> when used by the Update method of the <see cref="T:System.Data.Common.DbDataAdapter"></see>.</summary>
			<returns>One of the <see cref="T:System.Data.UpdateRowSource"></see> values.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlCommandBuilder">
			<summary>Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet"></see> with the associated SQL Server database. This class cannot be inherited. </summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommandBuilder.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder"></see> class.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder"></see> class with the associated <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see> object.</summary>
			<param name="adapter">The name of the <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see>. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
			<summary>Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.SqlClient.SqlCommand"></see> and populates the <see cref="P:System.Data.SqlClient.SqlCommand.Parameters"></see> collection of the specified <see cref="T:System.Data.SqlClient.SqlCommand"></see> object.</summary>
			<param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand"></see> referencing the stored procedure from which the parameter information is to be derived. The derived parameters are added to the <see cref="P:System.Data.SqlClient.SqlCommand.Parameters"></see> collection of the <see cref="T:System.Data.SqlClient.SqlCommand"></see>. </param>
			<exception cref="T:System.InvalidOperationException">The command text is not a valid stored procedure name. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
			<summary>Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand"></see> object required to perform deletions on the database.</summary>
			<returns>The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand"></see> object required to perform deletions.</returns>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
			<summary>Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand"></see> object required to perform insertions on the database.</summary>
			<returns>The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand"></see> object required to perform insertions.</returns>
		</member>
		<member name="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
			<summary>Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand"></see> object required to perform updates on the database.</summary>
			<returns>The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand"></see> object that is required to perform updates.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
			<summary>Gets or sets a <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see> object for which Transact-SQL statements are automatically generated.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see> object.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
			<summary>Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</summary>
			<returns>The starting character or characters to use. The default is an empty string.</returns>
			<exception cref="T:System.InvalidOperationException">This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
			<summary>Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</summary>
			<returns>The ending character or characters to use. The default is an empty string.</returns>
			<exception cref="T:System.InvalidOperationException">This property cannot be changed after an insert, update, or delete command has been generated. </exception>
		</member>
		<member name="T:System.Data.SqlClient.SqlConnection">
			<summary>Represents an open connection to a SQL Server database. This class cannot be inherited. </summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection"></see> class.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection"></see> class when given a string that contains the connection string.</summary>
			<param name="connectionString">The connection used to open the SQL Server database. </param>
		</member>
		<member name="E:System.Data.SqlClient.SqlConnection.InfoMessage">
			<summary>Occurs when SQL Server returns a warning or informational message.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
			<summary>Starts a database transaction.</summary>
			<returns>An object representing the new transaction.</returns>
			<exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
			<summary>Starts a database transaction with the specified isolation level.</summary>
			<returns>An object representing the new transaction.</returns>
			<param name="iso">The isolation level under which the transaction should run. </param>
			<exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
			<summary>Starts a database transaction with the specified transaction name.</summary>
			<returns>An object representing the new transaction.</returns>
			<param name="transactionName">The name of the transaction. </param>
			<exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
			<summary>Starts a database transaction with the specified isolation level and transaction name.</summary>
			<returns>An object representing the new transaction.</returns>
			<param name="iso">The isolation level under which the transaction should run. </param>
			<param name="transactionName">The name of the transaction. </param>
			<exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
			<summary>Changes the current database for an open <see cref="T:System.Data.SqlClient.SqlConnection"></see>.</summary>
			<param name="database">The name of the database to use instead of the current database. </param>
			<exception cref="T:System.Data.SqlClient.SqlException">Cannot change the database. </exception>
			<exception cref="T:System.InvalidOperationException">The connection is not open. </exception>
			<exception cref="T:System.ArgumentException">The database name is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.Close">
			<summary>Closes the connection to the database. This is the preferred method of closing any open connection.</summary>
			<exception cref="T:System.Data.SqlClient.SqlException">The connection-level error that occurred while opening the connection. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.CreateCommand">
			<summary>Creates and returns a <see cref="T:System.Data.SqlClient.SqlCommand"></see> object associated with the <see cref="T:System.Data.SqlClient.SqlConnection"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlCommand"></see> object.</returns>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.Open">
			<summary>Opens a database connection with the property settings specified by the <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString"></see>.</summary>
			<exception cref="T:System.InvalidOperationException">Cannot open a connection without specifying a data source or server.or The connection is already open. </exception>
			<exception cref="T:System.Data.SqlClient.SqlException">A connection-level error occurred while opening the connection. If the <see cref="P:System.Data.SqlClient.SqlException.Number"></see> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset. See the <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)"></see> method for more information.</exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlConnection.System.ICloneable.Clone">
			<summary>Creates a new object that is a copy of the current instance.</summary>
			<returns>A new object that is a copy of this instance.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlConnection.ConnectionString">
			<summary>Gets or sets the string used to open a SQL Server database.</summary>
			<returns>The connection string that includes the source database name, and other parameters needed to establish the initial connection. The default value is an empty string.</returns>
			<exception cref="T:System.ArgumentException">An invalid connection string argument has been supplied, or a required connection string argument has not been supplied. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
			<summary>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</summary>
			<returns>The time (in seconds) to wait for a connection to open. The default value is 15 seconds.</returns>
			<exception cref="T:System.ArgumentException">The value set is less than 0. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlConnection.Database">
			<summary>Gets the name of the current database or the database to be used after a connection is opened.</summary>
			<returns>The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlConnection.DataSource">
			<summary>Gets the name of the instance of SQL Server to which to connect.</summary>
			<returns>The name of the instance of SQL Server to which to connect. The default value is an empty string.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlConnection.PacketSize">
			<summary>Gets the size (in bytes) of network packets used to communicate with an instance of SQL Server.</summary>
			<returns>The size (in bytes) of network packets. The default value is 8192.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlConnection.ServerVersion">
			<summary>Gets a string that contains the version of the instance of SQL Server to which the client is connected.</summary>
			<returns>The version of the instance of SQL Server.</returns>
			<exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlConnection.State">
			<summary>Indicates the state of the <see cref="T:System.Data.SqlClient.SqlConnection"></see>.</summary>
			<returns>An <see cref="T:System.Data.ConnectionState"></see> enumeration.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlConnection.WorkstationId">
			<summary>Gets a string that identifies the database client.</summary>
			<returns>A string that identifies the database client. If not specified, the name of the client computer. If neither is specified, the value is an empty string.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlDataAdapter">
			<summary>Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet"></see> and update a SQL Server database. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see> class.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see> class with the specified <see cref="T:System.Data.SqlClient.SqlCommand"></see> as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand"></see> property.</summary>
			<param name="selectCommand">A <see cref="T:System.Data.SqlClient.SqlCommand"></see> that is a Transact-SQL SELECT statement or stored procedure and is set as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand"></see> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see>. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand"></see> and a <see cref="T:System.Data.SqlClient.SqlConnection"></see> object.</summary>
			<param name="selectCommandText">A <see cref="T:System.String"></see> that is a Transact-SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand"></see> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see>. </param>
			<param name="selectConnection">A <see cref="T:System.Data.SqlClient.SqlConnection"></see> that represents the connection. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand"></see> and a connection string.</summary>
			<param name="selectCommandText">A <see cref="T:System.String"></see> that is a Transact-SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand"></see> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see>. </param>
			<param name="selectConnectionString">The connection string. </param>
		</member>
		<member name="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
			<summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see> after a command is executed against the data source. The attempt to update is made, so the event fires.</summary>
		</member>
		<member name="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
			<summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see> before a command is executed against the data source. The attempt to update is made, so the event fires.</summary>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
			<summary>Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlCommand"></see> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see> to delete records in the database that correspond to deleted rows in the <see cref="T:System.Data.DataSet"></see>.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
			<summary>Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlCommand"></see> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see> to insert records into the database that correspond to new rows in the <see cref="T:System.Data.DataSet"></see>.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
			<summary>Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlCommand"></see> used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)"></see> to select records from the database for placement in the <see cref="T:System.Data.DataSet"></see>.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand">
			<summary>For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.DeleteCommand"></see>.</summary>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand">
			<summary>For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.InsertCommand"></see>.</summary>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand">
			<summary>For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.SelectCommand"></see>.</summary>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand">
			<summary>For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.UpdateCommand"></see>.</summary>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
			<summary>Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlCommand"></see> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see> to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet"></see>.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlDataReader">
			<summary>Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.Close">
			<summary>Closes the <see cref="T:System.Data.SqlClient.SqlDataReader"></see> object.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
			<summary>Gets the value of the specified column as a Boolean.</summary>
			<returns>The value of the column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
			<summary>Gets the value of the specified column as a byte.</summary>
			<returns>The value of the specified column as a byte.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
			<summary>Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</summary>
			<returns>The actual number of bytes read.</returns>
			<param name="buffer">The buffer into which to read the stream of bytes. </param>
			<param name="dataIndex">The index within the field from which to begin the read operation.</param>
			<param name="i">The zero-based column ordinal. </param>
			<param name="bufferIndex">The index for buffer to begin the write operation. </param>
			<param name="length">The maximum length to copy into the buffer. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
			<summary>Gets the value of the specified column as a single character.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
			<summary>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</summary>
			<returns>The actual number of characters read.</returns>
			<param name="buffer">The buffer into which to read the stream of bytes. </param>
			<param name="dataIndex">The index within the field from which to begin the read operation.</param>
			<param name="i">The zero-based column ordinal. </param>
			<param name="bufferIndex">The index for buffer to begin the write operation. </param>
			<param name="length">The maximum length to copy into the buffer. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
			<summary>Gets the name of the source data type.</summary>
			<returns>The name of the back-end data type.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.DateTime"></see> object.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Decimal"></see> object.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
			<summary>Gets the value of the specified column as a double-precision floating point number.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
			<summary>Gets the <see cref="T:System.Type"></see> that is the data type of the object.</summary>
			<returns>The <see cref="T:System.Type"></see> that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, GetFieldType returns null.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
			<summary>Gets the value of the specified column as a single-precision floating point number.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
			<summary>Gets the value of the specified column as a globally unique identifier (GUID).</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
			<summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
			<summary>Gets the value of the specified column as a 32-bit signed integer.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
			<summary>Gets the value of the specified column as a 64-bit signed integer.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
			<summary>Gets the name of the specified column.</summary>
			<returns>The name of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
			<summary>Gets the column ordinal, given the name of the column.</summary>
			<returns>The zero-based column ordinal.</returns>
			<param name="name">The name of the column. </param>
			<exception cref="T:System.IndexOutOfRangeException">The name specified is not a valid column name. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable">
			<summary>Returns a <see cref="T:System.Data.DataTable"></see> that describes the column metadata of the <see cref="T:System.Data.SqlClient.SqlDataReader"></see>.</summary>
			<returns>A <see cref="T:System.Data.DataTable"></see> that describes the column metadata.</returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlDataReader"></see> is closed. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlBinary"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean"></see>.</summary>
			<returns>The value of the column.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlByte"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlDateTime"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlDecimal"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlDouble"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlGuid"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlInt16"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlInt32"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlInt64"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlMoney"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlSingle"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
			<summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlString"></see>.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
			<summary>Gets an <see cref="T:System.Object"></see> that is a representation of the underlying <see cref="T:System.Data.SqlDbType"></see> Variant.</summary>
			<returns>An <see cref="T:System.Object"></see> that is a representation of the underlying <see cref="T:System.Data.SqlDbType"></see> variant.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
			<summary>Gets all the attribute columns in the current row.</summary>
			<returns>The number of instances of <see cref="T:System.Object"></see> in the array.</returns>
			<param name="values">An array of <see cref="T:System.Object"></see> to copy the attribute columns into. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
			<summary>Gets the value of the specified column as a string.</summary>
			<returns>The value of the specified column.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
			<summary>Gets the value of the specified column in its native format.</summary>
			<returns>This method returns <see cref="T:System.DBNull"></see> for null database columns.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
			<summary>Gets all attribute columns in the collection for the current row.</summary>
			<returns>The number of instances of <see cref="T:System.Object"></see> in the array.</returns>
			<param name="values">An array of <see cref="T:System.Object"></see> into which to copy the attribute columns. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
			<summary>Gets a value that indicates whether the column contains non-existent or missing values.</summary>
			<returns>true if the specified column value is equivalent to <see cref="T:System.DBNull"></see>; otherwise false.</returns>
			<param name="i">The zero-based column ordinal. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.NextResult">
			<summary>Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</summary>
			<returns>true if there are more result sets; otherwise false.</returns>
		</member>
		<member name="M:System.Data.SqlClient.SqlDataReader.Read">
			<summary>Advances the <see cref="T:System.Data.SqlClient.SqlDataReader"></see> to the next record.</summary>
			<returns>true if there are more rows; otherwise false.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataReader.Depth">
			<summary>Gets a value that indicates the depth of nesting for the current row.</summary>
			<returns>The depth of nesting for the current row.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataReader.FieldCount">
			<summary>Gets the number of columns in the current row.</summary>
			<returns>When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.</returns>
			<exception cref="T:System.NotSupportedException">There is no current connection to an instance of SQL Server. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataReader.IsClosed">
			<summary>Retrieves a Boolean value that indicates whether the specified <see cref="T:System.Data.SqlClient.SqlDataReader"></see> instance has been closed. </summary>
			<returns>true if the specified <see cref="T:System.Data.SqlClient.SqlDataReader"></see> instance is closed; otherwise false. </returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)">
			<summary>Gets the value of the specified column in its native format given the column ordinal.</summary>
			<returns>The value of the specified column in its native format.</returns>
			<param name="i">The zero-based column ordinal. </param>
			<exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataReader.Item(System.String)">
			<summary>Gets the value of the specified column in its native format given the column name.</summary>
			<returns>The value of the specified column in its native format.</returns>
			<param name="name">The column name. </param>
			<exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlDataReader.RecordsAffected">
			<summary>Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</summary>
			<returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlError">
			<summary>Collects information relevant to a warning or error returned by SQL Server.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlError.ToString">
			<summary>Gets the complete text of the error message.</summary>
			<returns>The complete text of the error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlError.Class">
			<summary>Gets the severity level of the error returned from SQL Server.</summary>
			<returns>A value from 1 to 25 that indicates the severity level of the error. The default is 0.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlError.LineNumber">
			<summary>Gets the line number within the Transact-SQL command batch or stored procedure that contains the error.</summary>
			<returns>The line number within the Transact-SQL command batch or stored procedure that contains the error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlError.Message">
			<summary>Gets the text describing the error.</summary>
			<returns>The text describing the error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlError.Number">
			<summary>Gets a number that identifies the type of error.</summary>
			<returns>The number that identifies the type of error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlError.Procedure">
			<summary>Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</summary>
			<returns>The name of the stored procedure or RPC.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlError.Server">
			<summary>Gets the name of the instance of SQL Server that generated the error.</summary>
			<returns>The name of the instance of SQL Server.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlError.Source">
			<summary>Gets the name of the provider that generated the error.</summary>
			<returns>The name of the provider that generated the error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlError.State">
			<summary>Gets a numeric error code from SQL Server that represents an error, warning or "no data found" message.</summary>
			<returns>The number that represents the error code.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlErrorCollection">
			<summary>Collects all errors generated by the .NET Framework Data Provider for SQL Server. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the <see cref="T:System.Data.SqlClient.SqlErrorCollection"></see> collection into an <see cref="T:System.Array"></see>, starting at the specified index.</summary>
			<param name="array">The <see cref="T:System.Array"></see> to copy elements into. </param>
			<param name="index">The index from which to start copying into the array parameter. </param>
			<exception cref="T:System.ArgumentNullException">The array is null. </exception>
			<exception cref="T:System.ArgumentOutOfRangeException">The index is not valid for array. </exception>
			<exception cref="T:System.ArgumentException">The sum of index and the number of elements in the <see cref="T:System.Data.SqlClient.SqlErrorCollection"></see> collection is greater than the <see cref="P:System.Array.Length"></see> of the <see cref="T:System.Array"></see>. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlErrorCollection.GetEnumerator">
			<summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> .</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlErrorCollection.Count">
			<summary>Gets the number of errors in the collection.</summary>
			<returns>The total number of errors in the collection.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
			<summary>Gets the error at the specified index.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlError"></see> that contains the error at the specified index.</returns>
			<param name="index">The zero-based index of the error to retrieve. </param>
			<exception cref="T:System.IndexOutOfRangeException">Index parameter is outside array bounds. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlErrorCollection.System.Collections.ICollection.IsSynchronized">
			<summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized"></see>.</summary>
		</member>
		<member name="P:System.Data.SqlClient.SqlErrorCollection.System.Collections.ICollection.SyncRoot">
			<summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot"></see>.</summary>
		</member>
		<member name="T:System.Data.SqlClient.SqlException">
			<summary>The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.</summary>
		</member>
		<member name="P:System.Data.SqlClient.SqlException.Class">
			<summary>Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.</summary>
			<returns>A value from 1 to 25 that indicates the severity level of the error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlException.Errors">
			<summary>Gets a collection of one or more <see cref="T:System.Data.SqlClient.SqlError"></see> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.</summary>
			<returns>The collected instances of the <see cref="T:System.Data.SqlClient.SqlError"></see> class.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlException.LineNumber">
			<summary>Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.</summary>
			<returns>The line number within the Transact-SQL command batch or stored procedure that generated the error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlException.Number">
			<summary>Gets a number that identifies the type of error.</summary>
			<returns>The number that identifies the type of error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlException.Procedure">
			<summary>Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</summary>
			<returns>The name of the stored procedure or RPC.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlException.Server">
			<summary>Gets the name of the computer that is running an instance of SQL Server that generated the error.</summary>
			<returns>The name of the computer running an instance of SQL Server.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlException.Source">
			<summary>Gets the name of the provider that generated the error.</summary>
			<returns>The name of the provider that generated the error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlException.State">
			<summary>Gets a numeric error code from SQL Server that represents an error, warning or "no data found" message. For more information about how to decode these values, see SQL Server Books Online.</summary>
			<returns>The number representing the error code.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlInfoMessageEventArgs">
			<summary>Provides data for the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage"></see> event.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlInfoMessageEventArgs.ToString">
			<summary>Retrieves a string representation of the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage"></see> event.</summary>
			<returns>A string representing the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage"></see> event.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Errors">
			<summary>Gets the collection of warnings sent from the server.</summary>
			<returns>The collection of warnings sent from the server.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Message">
			<summary>Gets the full text of the error sent from the database.</summary>
			<returns>The full text of the error.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Source">
			<summary>Gets the name of the object that generated the error.</summary>
			<returns>The name of the object that generated the error.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlInfoMessageEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage"></see> event of a <see cref="T:System.Data.SqlClient.SqlConnection"></see>.</summary>
		</member>
		<member name="T:System.Data.SqlClient.SqlParameter">
			<summary>Represents a parameter to a <see cref="T:System.Data.SqlClient.SqlCommand"></see> and optionally its mapping to <see cref="T:System.Data.DataSet"></see> columns. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> class.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> class that uses the parameter name and a value of the new <see cref="T:System.Data.SqlClient.SqlParameter"></see>.</summary>
			<param name="value">An <see cref="T:System.Object"></see> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter"></see>. </param>
			<param name="parameterName">The name of the parameter to map. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> class that uses the parameter name and the data type.</summary>
			<param name="dbType">One of the <see cref="T:System.Data.SqlDbType"></see> values. </param>
			<param name="parameterName">The name of the parameter to map. </param>
			<exception cref="T:System.ArgumentException">The value supplied in the dbType parameter is an invalid back-end data type. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType"></see>, and the size.</summary>
			<param name="size">The length of the parameter. </param>
			<param name="dbType">One of the <see cref="T:System.Data.SqlDbType"></see> values. </param>
			<param name="parameterName">The name of the parameter to map. </param>
			<exception cref="T:System.ArgumentException">The value supplied in the dbType parameter is an invalid back-end data type. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType"></see>, the size, and the source column name.</summary>
			<param name="size">The length of the parameter. </param>
			<param name="sourceColumn">The name of the source column. </param>
			<param name="dbType">One of the <see cref="T:System.Data.SqlDbType"></see> values. </param>
			<param name="parameterName">The name of the parameter to map. </param>
			<exception cref="T:System.ArgumentException">The value supplied in the dbType parameter is an invalid back-end data type. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> class that uses the parameter name, the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection"></see>, the precision of the parameter, the scale of the parameter, the source column, a <see cref="T:System.Data.DataRowVersion"></see> to use, and the value of the parameter.</summary>
			<param name="size">The length of the parameter. </param>
			<param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion"></see> values. </param>
			<param name="isNullable">true if the value of the field can be null; otherwise false. </param>
			<param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see> is resolved. </param>
			<param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see> is resolved. </param>
			<param name="dbType">One of the <see cref="T:System.Data.SqlDbType"></see> values. </param>
			<param name="sourceColumn">The name of the source column. </param>
			<param name="value">An <see cref="T:System.Object"></see> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter"></see>. </param>
			<param name="direction">One of the <see cref="T:System.Data.ParameterDirection"></see> values. </param>
			<param name="parameterName">The name of the parameter to map. </param>
			<exception cref="T:System.ArgumentException">The value supplied in the dbType parameter is an invalid back-end data type. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameter.System.ICloneable.Clone">
			<summary>For a description of this member, see <see cref="M:System.ICloneable.Clone"></see>.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameter.ToString">
			<summary>Gets a string that contains the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName"></see>.</summary>
			<returns>A string that contains the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName"></see>.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.DbType">
			<summary>Gets or sets the <see cref="T:System.Data.SqlDbType"></see> of the parameter.</summary>
			<returns>One of the <see cref="T:System.Data.SqlDbType"></see> values. The default is NVarChar.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.Direction">
			<summary>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</summary>
			<returns>One of the <see cref="T:System.Data.ParameterDirection"></see> values. The default is Input.</returns>
			<exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection"></see> values.</exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.IsNullable">
			<summary>Gets or sets a value that indicates whether the parameter accepts null values.</summary>
			<returns>true if null values are accepted; otherwise false. The default is false.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.Offset">
			<summary>Gets or sets the offset to the <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see> property.</summary>
			<returns>The offset to the <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see>. The default is 0.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.ParameterName">
			<summary>Gets or sets the name of the <see cref="T:System.Data.SqlClient.SqlParameter"></see>.</summary>
			<returns>The name of the <see cref="T:System.Data.SqlClient.SqlParameter"></see>. The default is an empty string.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.Precision">
			<summary>Gets or sets the maximum number of digits used to represent the <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see> property.</summary>
			<returns>The maximum number of digits used to represent the <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see> property. The default value is 0. This indicates that the data provider sets the precision for <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see>.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.Scale">
			<summary>Gets or sets the number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see> is resolved.</summary>
			<returns>The number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see> is resolved. The default is 0.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.Size">
			<summary>Gets or sets the maximum size, in bytes, of the data within the column.</summary>
			<returns>The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.SourceColumn">
			<summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet"></see> and used for loading or returning the <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see></summary>
			<returns>The name of the source column mapped to the <see cref="T:System.Data.DataSet"></see>. The default is an empty string.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.SourceVersion">
			<summary>Gets or sets the <see cref="T:System.Data.DataRowVersion"></see> to use when you load <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see></summary>
			<returns>One of the <see cref="T:System.Data.DataRowVersion"></see> values. The default is Current.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.SqlDbType">
			<summary>Gets or sets the <see cref="T:System.Data.SqlDbType"></see> of the parameter.</summary>
			<returns>One of the <see cref="T:System.Data.SqlDbType"></see> values. The default is NVarChar.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameter.Value">
			<summary>Gets or sets the value of the parameter.</summary>
			<returns>An <see cref="T:System.Object"></see> that is the value of the parameter. The default value is null.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlParameterCollection">
			<summary>Represents a collection of parameters associated with a <see cref="T:System.Data.SqlClient.SqlCommand"></see> and their respective mappings to columns in a <see cref="T:System.Data.DataSet"></see>. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
			<summary>Adds the specified <see cref="T:System.Data.SqlClient.SqlParameter"></see> object to the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</summary>
			<returns>The index of the new <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.</returns>
			<param name="value">An <see cref="T:System.Object"></see>.</param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)">
			<summary>Adds the specified <see cref="T:System.Data.SqlClient.SqlParameter"></see> object to the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</summary>
			<returns>The index of the new <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.</returns>
			<param name="value">The <see cref="T:System.Data.SqlClient.SqlParameter"></see> to add to the collection. </param>
			<exception cref="T:System.InvalidCastException">The parameter passed was not a <see cref="T:System.Data.SqlClient.SqlParameter"></see>. </exception>
			<exception cref="T:System.ArgumentNullException">The value parameter is null. </exception>
			<exception cref="T:System.ArgumentException">The <see cref="T:System.Data.SqlClient.SqlParameter"></see> specified in the value parameter is already added to this or another <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Object)">
			<summary>Adds the specified <see cref="T:System.Data.SqlClient.SqlParameter"></see> object to the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</summary>
			<returns>The index of the new <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.Use caution when you are using this overload of the <see cref="M:System.Data.SqlClient.SqlParameterCollection.Add"></see> method to specify integer parameter values. Because this overload takes a value of type <see cref="T:System.Object"></see>, you must convert the integral value to an <see cref="T:System.Object"></see> type when the value is zero, as the following C# example demonstrates.parameters.Add("@pname", Convert.ToInt32(0));If you do not perform this conversion, the compiler assumes that you are trying to call the SqlParameterCollection.Add (string, SqlDbType) overload.</returns>
			<param name="value">A <see cref="T:System.Object"></see>.</param>
			<param name="parameterName">The name of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> to add to the collection.</param>
			<exception cref="T:System.ArgumentNullException">The value parameter is null. </exception>
			<exception cref="T:System.ArgumentException">The <see cref="T:System.Data.SqlClient.SqlParameter"></see> specified in the value parameter is already added to this or another <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)">
			<summary>Adds a <see cref="T:System.Data.SqlClient.SqlParameter"></see> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> given the parameter name and the data type.</summary>
			<returns>The index of the new <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.</returns>
			<param name="parameterName">The name of the parameter. </param>
			<param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType"></see> values. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
			<summary>Adds a <see cref="T:System.Data.SqlClient.SqlParameter"></see> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>, given the specified parameter name and value.</summary>
			<returns>The index of the new <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.</returns>
			<param name="size">The size as an <see cref="T:System.Int32"></see>.</param>
			<param name="parameterName">The name of the parameter. </param>
			<param name="sqlDbType">The <see cref="P:System.Data.SqlClient.SqlParameter.Value"></see> of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> to add to the collection. </param>
			<exception cref="T:System.InvalidCastException">The value parameter is not an <see cref="T:System.Data.SqlClient.SqlParameter"></see>. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32,System.String)">
			<summary>Adds a <see cref="T:System.Data.SqlClient.SqlParameter"></see> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> with the parameter name, the data type, and the column length.</summary>
			<returns>The index of the new <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.</returns>
			<param name="size">The column length.</param>
			<param name="sourceColumn">The name of the source column.</param>
			<param name="parameterName">The name of the parameter. </param>
			<param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType"></see> values. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)">
			<summary>Adds a value to the end of the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlParameter"></see> object.</returns>
			<param name="value">The value to be added.</param>
			<param name="parameterName">The name of the parameter.</param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Clear">
			<summary>Removes all the <see cref="T:System.Data.SqlClient.SqlParameter"></see> objects from the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)">
			<summary>Determines whether the specified <see cref="T:System.Object"></see> is in this <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</summary>
			<returns>true if the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> contains the value; otherwise false.</returns>
			<param name="value">The <see cref="T:System.Object"></see> value.</param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.String)">
			<summary>Determines whether the specified <see cref="T:System.String"></see> is in this <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</summary>
			<returns>true if the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> contains the value; otherwise false.</returns>
			<param name="value">The <see cref="T:System.String"></see> value.</param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> to the specified one-dimensional <see cref="T:System.Array"></see> starting at the specified destination <see cref="T:System.Array"></see> index.</summary>
			<param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from the current <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</param>
			<param name="index">A 32-bit integer that represents the index in the <see cref="T:System.Array"></see> at which copying starts.</param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>. </summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> for the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>. </returns>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)">
			<summary>Gets the location of the specified <see cref="T:System.Object"></see> within the collection.</summary>
			<returns>The zero-based location of the specified <see cref="T:System.Object"></see> that is a <see cref="T:System.Data.SqlClient.SqlParameter"></see> within the collection. Returns -1 when the object does not exist in the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</returns>
			<param name="value">The <see cref="T:System.Object"></see> to find. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)">
			<summary>Gets the location of the specified <see cref="T:System.Data.SqlClient.SqlParameter"></see> with the specified name.</summary>
			<returns>The zero-based location of the specified <see cref="T:System.Data.SqlClient.SqlParameter"></see> with the specified case-sensitive name. Returns -1 when the object does not exist in the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</returns>
			<param name="parameterName">The case-sensitive name of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> to find.</param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)">
			<summary>Inserts an <see cref="T:System.Object"></see> into the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> at the specified index.</summary>
			<param name="value">An <see cref="T:System.Object"></see> to be inserted in the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>.</param>
			<param name="index">The zero-based index at which value should be inserted.</param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)">
			<summary>Removes the specified <see cref="T:System.Data.SqlClient.SqlParameter"></see> from the collection.</summary>
			<param name="value">A <see cref="T:System.Object"></see> object to remove from the collection. </param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)">
			<summary>Removes the <see cref="T:System.Data.SqlClient.SqlParameter"></see> from the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> at the specified index.</summary>
			<param name="index">The zero-based index of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> object to remove.</param>
		</member>
		<member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)">
			<summary>Removes the <see cref="T:System.Data.SqlClient.SqlParameter"></see> from the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> at the specified parameter name.</summary>
			<param name="parameterName">The name of the <see cref="T:System.Data.SqlClient.SqlParameter"></see> to remove.</param>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameterCollection.Count">
			<summary>Returns an Integer that contains the number of elements in the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see>. Read-only. </summary>
			<returns>The number of elements in the <see cref="T:System.Data.SqlClient.SqlParameterCollection"></see> as an Integer.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)">
			<summary>Gets the <see cref="T:System.Data.SqlClient.SqlParameter"></see> at the specified index.</summary>
			<returns>The <see cref="T:System.Data.SqlClient.SqlParameter"></see> at the specified index.</returns>
			<param name="index">The zero-based index of the parameter to retrieve. </param>
			<exception cref="T:System.IndexOutOfRangeException">The specified index does not exist. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.String)">
			<summary>Gets the <see cref="T:System.Data.SqlClient.SqlParameter"></see> with the specified name.</summary>
			<returns>The <see cref="T:System.Data.SqlClient.SqlParameter"></see> with the specified name.</returns>
			<param name="parameterName">The name of the parameter to retrieve. </param>
			<exception cref="T:System.IndexOutOfRangeException">The specified name does not exist. </exception>
		</member>
		<member name="T:System.Data.SqlClient.SqlRowUpdatedEventArgs">
			<summary>Provides data for the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated"></see> event.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs"></see> class.</summary>
			<param name="statementType">One of the <see cref="T:System.Data.StatementType"></see> values that specifies the type of query executed. </param>
			<param name="row">The <see cref="T:System.Data.DataRow"></see> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see>. </param>
			<param name="command">The <see cref="T:System.Data.IDbCommand"></see> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see> is called. </param>
			<param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping"></see> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see>. </param>
		</member>
		<member name="P:System.Data.SqlClient.SqlRowUpdatedEventArgs.Command">
			<summary>Gets or sets the <see cref="T:System.Data.SqlClient.SqlCommand"></see> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see> is called.</summary>
			<returns>The <see cref="T:System.Data.SqlClient.SqlCommand"></see> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see> is called.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlRowUpdatedEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated"></see> event of a <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see>.</summary>
		</member>
		<member name="T:System.Data.SqlClient.SqlRowUpdatingEventArgs">
			<summary>Provides data for the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating"></see> event.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
			<summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs"></see> class.</summary>
			<param name="statementType">One of the <see cref="T:System.Data.StatementType"></see> values that specifies the type of query executed. </param>
			<param name="row">The <see cref="T:System.Data.DataRow"></see> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see>. </param>
			<param name="command">The <see cref="T:System.Data.IDbCommand"></see> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see>. </param>
			<param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping"></see> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see>. </param>
		</member>
		<member name="P:System.Data.SqlClient.SqlRowUpdatingEventArgs.Command">
			<summary>Gets or sets the <see cref="T:System.Data.SqlClient.SqlCommand"></see> to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see>.</summary>
			<returns>The <see cref="T:System.Data.SqlClient.SqlCommand"></see> to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"></see>.</returns>
		</member>
		<member name="T:System.Data.SqlClient.SqlRowUpdatingEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating"></see> event of a <see cref="T:System.Data.SqlClient.SqlDataAdapter"></see>.</summary>
		</member>
		<member name="T:System.Data.SqlClient.SqlTransaction">
			<summary>Represents a Transact-SQL transaction to be made in a SQL Server database. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Data.SqlClient.SqlTransaction.Commit">
			<summary>Commits the database transaction.</summary>
			<exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
			<exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlTransaction.Rollback">
			<summary>Rolls back a transaction from a pending state.</summary>
			<exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
			<exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
			<summary>Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</summary>
			<param name="transactionName">The name of the transaction to roll back, or the savepoint to which to roll back. </param>
			<exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
			<exception cref="T:System.ArgumentException">No transaction name was specified. </exception>
		</member>
		<member name="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
			<summary>Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</summary>
			<param name="savePointName">The name of the savepoint. </param>
			<exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
			<exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
		</member>
		<member name="P:System.Data.SqlClient.SqlTransaction.Connection">
			<summary>Gets the <see cref="T:System.Data.SqlClient.SqlConnection"></see> object associated with the transaction, or null if the transaction is no longer valid.</summary>
			<returns>The <see cref="T:System.Data.SqlClient.SqlConnection"></see> object associated with the transaction.</returns>
		</member>
		<member name="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
			<summary>Specifies the <see cref="T:System.Data.IsolationLevel"></see> for this transaction.</summary>
			<returns>The <see cref="T:System.Data.IsolationLevel"></see> for this transaction. The default is ReadCommitted.</returns>
		</member>
	</members>
</doc>