<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>System.Configuration</name>
	</assembly>
	<members>
		<member name="T:System.Configuration.AppSettingsSection">
			<summary>Provides configuration system support for the appSettings configuration section. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.AppSettingsSection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.AppSettingsSection"></see> class.</summary>
		</member>
		<member name="P:System.Configuration.AppSettingsSection.File">
			<summary>Gets or sets a configuration file that provides additional settings or overrides the settings specified in the appSettings element.</summary>
			<returns>A configuration file that provides additional settings or overrides the settings specified in the appSettings element.</returns>
		</member>
		<member name="P:System.Configuration.AppSettingsSection.Settings">
			<summary>Gets a <see cref="T:System.Collections.Specialized.NameValueCollection"></see> collection containing the application settings from the configuration file.</summary>
			<returns>A <see cref="T:System.Collections.Specialized.NameValueCollection"></see> containing the application settings from the configuration file.</returns>
		</member>
		<member name="T:System.Configuration.CallbackValidator">
			<summary>Provides dynamic validation of an object.</summary>
		</member>
		<member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.CallbackValidator"></see> class.</summary>
			<param name="type">The type of object that will be validated.</param>
			<param name="callback">The <see cref="T:System.Configuration.ValidatorCallback"></see> used as the delegate.</param>
		</member>
		<member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
			<summary>Determines whether the type of the object can be validated.</summary>
			<returns>true if the type parameter matches the type used as the first parameter when creating an instance of <see cref="T:System.Configuration.CallbackValidator"></see>; otherwise, false. </returns>
			<param name="type">The type of object.</param>
		</member>
		<member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid.</summary>
			<param name="value">The value of an object.</param>
		</member>
		<member name="T:System.Configuration.CallbackValidatorAttribute">
			<summary>Specifies a <see cref="T:System.Configuration.CallbackValidator"></see> object to use for code validation. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.CallbackValidatorAttribute"></see> class.</summary>
		</member>
		<member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
			<summary>Gets or sets the name of the callback method.</summary>
			<returns>The name of the method to call.</returns>
		</member>
		<member name="P:System.Configuration.CallbackValidatorAttribute.Type">
			<summary>Gets or sets the type of the validator.</summary>
			<returns>The <see cref="T:System.Type"></see> of the current validator attribute instance.</returns>
		</member>
		<member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
			<summary>Gets the validator instance.</summary>
			<returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> instance.</returns>
		</member>
		<member name="T:System.Configuration.CommaDelimitedStringCollection">
			<summary>Represents a collection of string elements separated by commas. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
			<summary>Adds a string to the comma-delimited collection.</summary>
			<param name="value">A string value.</param>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
			<summary>Adds all the strings in a string array to the collection.</summary>
			<param name="range">An array of strings to add to the collection.</param>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
			<summary>Clears the collection.</summary>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
			<summary>Creates a copy of the collection.</summary>
			<returns>A <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see>.</returns>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
			<summary>Adds a string element to the collection at the specified index.</summary>
			<param name="value">The value of the new element to add to the collection.</param>
			<param name="index">The index in the collection at which the new element will be added.</param>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
			<summary>Removes a string element from the collection.</summary>
			<param name="value">The string to remove.</param>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
			<summary>Sets the collection object to read-only.</summary>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
			<summary>Returns a string representation of the object.</summary>
			<returns>A string representation of the object.</returns>
		</member>
		<member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
			<summary>Gets a value that specifies whether the collection has been modified. </summary>
			<returns>true if the <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see> has been modified; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
			<summary>Gets a value indicating whether the collection object is read-only.</summary>
			<returns>true if the specified string element in the <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see> is read-only; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
			<summary>Gets or sets a string element in the collection based on the index.</summary>
			<returns>A string element in the collection.</returns>
			<param name="index">The index of the string element in the collection.</param>
		</member>
		<member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
			<summary>Converts a comma-delimited string value to and from a <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see> object. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> object to a <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see> containing the converted value.</returns>
			<param name="data">The comma-separated <see cref="T:System.String"></see> to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see> object to a <see cref="T:System.String"></see> object.</summary>
			<returns>The <see cref="T:System.String"></see> representing the converted value parameter, which is a <see cref="T:System.Configuration.CommaDelimitedStringCollection"></see>.</returns>
			<param name="type">The conversion type.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> used during conversion.</param>
			<param name="value">The value to convert.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.Configuration">
			<summary>Represents a configuration file applicable to a particular computer, application, or resource. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.Configuration.GetSection(System.String)">
			<summary>Returns the specified <see cref="T:System.Configuration.ConfigurationSection"></see> object.</summary>
			<returns>The specified <see cref="T:System.Configuration.ConfigurationSection"></see> object.</returns>
			<param name="sectionName">The path to the section to be returned.</param>
		</member>
		<member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
			<summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> specified.</returns>
			<param name="sectionGroupName">The path name of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> to return.</param>
		</member>
		<member name="M:System.Configuration.Configuration.Save">
			<summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration"></see> object to the current XML configuration file.</summary>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
		</member>
		<member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
			<summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration"></see> object to the current XML configuration file.</summary>
			<param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode"></see> value that determines which property values to save.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
		</member>
		<member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
			<summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration"></see> object to the current XML configuration file.</summary>
			<param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode"></see> value that determines which property values to save.</param>
			<param name="forceSaveAll">true to save even if the configuration was not modified; otherwise, false.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
		</member>
		<member name="M:System.Configuration.Configuration.SaveAs(System.String)">
			<summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration"></see> object to the specified XML configuration file.</summary>
			<param name="filename">The path and file name to save the configuration file to.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
		</member>
		<member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
			<summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration"></see> object to the specified XML configuration file.</summary>
			<param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode"></see> value that determines which property values to save.</param>
			<param name="filename">The path and file name to save the configuration file to.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.- or -The configuration file has changed. </exception>
		</member>
		<member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
			<summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration"></see> object to the specified XML configuration file.</summary>
			<param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode"></see> value that determines which property values to save.</param>
			<param name="forceSaveAll">true to save even if the configuration was not modified; otherwise, false.</param>
			<param name="filename">The path and file name to save the configuration file to.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to, or the configuration file has changed. </exception>
		</member>
		<member name="P:System.Configuration.Configuration.AppSettings">
			<summary>Gets the <see cref="T:System.Configuration.AppSettingsSection"></see> object configuration section that applies to this <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>An <see cref="T:System.Configuration.AppSettingsSection"></see> object representing the appSettings configuration section that applies to this <see cref="T:System.Configuration.Configuration"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.ConnectionStrings">
			<summary>Gets a <see cref="T:System.Configuration.ConnectionStringsSection"></see> configuration-section object that applies to this <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.ConnectionStringsSection"></see> configuration-section object representing the connectionStrings configuration section that applies to this <see cref="T:System.Configuration.Configuration"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.EvaluationContext">
			<summary>Gets the <see cref="T:System.Configuration.ContextInformation"></see> object for the <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>The <see cref="T:System.Configuration.ContextInformation"></see> object for the <see cref="T:System.Configuration.Configuration"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.FilePath">
			<summary>Gets the physical path to the configuration file represented by this <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>The physical path to the configuration file represented by this <see cref="T:System.Configuration.Configuration"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.HasFile">
			<summary>Indicates whether a configuration file exists for the resource represented by this <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>true if there is a configuration file; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.Locations">
			<summary>Gets the locations defined within this <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationLocationCollection"></see> containing the locations defined within this <see cref="T:System.Configuration.Configuration"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.NamespaceDeclared">
			<summary>Gets or sets a value indicating whether the configuration file has an XML namespace.</summary>
			<returns>true if the configuration file has an XML namespace; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.RootSectionGroup">
			<summary>Gets the root <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> for this <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>The root section group for this <see cref="T:System.Configuration.Configuration"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.SectionGroups">
			<summary>Gets a collection of the section groups defined by this configuration.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see> collection representing the collection of section groups for this <see cref="T:System.Configuration.Configuration"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.Configuration.Sections">
			<summary>Gets a collection of the sections defined by this configuration.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationSectionCollection"></see> collection representing the collection of sections for this <see cref="T:System.Configuration.Configuration"></see> object.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationAllowDefinition">
			<summary>Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a <see cref="T:System.Configuration.ConfigurationSection"></see> object.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
			<summary>The <see cref="T:System.Configuration.ConfigurationSection"></see> can be defined anywhere.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
			<summary>The <see cref="T:System.Configuration.ConfigurationSection"></see> can be defined only in the Machine.config file.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
			<summary>The <see cref="T:System.Configuration.ConfigurationSection"></see> can be defined in either the Machine.config file, the machine-level Web.config file found in the same directory as Machine.config, or the top-level application Web.config file found in the virtual-directory root, but not in subdirectories of a virtual root.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
			<summary>The <see cref="T:System.Configuration.ConfigurationSection"></see> can be defined in either the Machine.config file or the machine-level Web.config file found in the same directory as Machine.config, but not in application Web.config files.</summary>
		</member>
		<member name="T:System.Configuration.ConfigurationAllowExeDefinition">
			<summary>Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a <see cref="T:System.Configuration.ConfigurationSection"></see> object.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
			<summary>The <see cref="T:System.Configuration.ConfigurationSection"></see> can be defined only in the Machine.config file. </summary>
		</member>
		<member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
			<summary>The <see cref="T:System.Configuration.ConfigurationSection"></see> can be defined either in the Machine.config file or in the Exe.config file in the client application directory. This is the default value.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
			<summary>The <see cref="T:System.Configuration.ConfigurationSection"></see> can be defined in the Machine.config file, in the Exe.config file in the client application directory, in the User.config file in the roaming user directory, or in the User.config file in the local user directory.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
			<summary>The <see cref="T:System.Configuration.ConfigurationSection"></see> can be defined in the Machine.config file, in the Exe.config file in the client application directory, or in the User.config file in the roaming user directory. </summary>
		</member>
		<member name="T:System.Configuration.ConfigurationCollectionAttribute">
			<summary>Declaratively instructs the .NET Framework to instantiate a configuration element collection. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute"></see> class.</summary>
			<param name="itemType">The type of the property collection to create.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
			<summary>Gets or sets the name of the add configuration element.</summary>
			<returns>The name that substitutes the standard add for the configuration item.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
			<summary>Gets or sets the name for the clear configuration element.</summary>
			<returns>The name that replaces the standard name "clear" for the configuration item.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
			<summary>Gets or sets the type of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute"></see>.</summary>
			<returns>The type of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute"></see>.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
			<summary>Gets the type of the collection element.</summary>
			<returns>The type of the collection element.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
			<summary>Gets or sets the name for the remove configuration element.</summary>
			<returns>The name that replaces the standard name "remove" for the configuration element.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationConverterBase">
			<summary>The base class for the configuration converter types.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationConverterBase"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether the conversion is allowed.</summary>
			<returns>true if the conversion is allowed; otherwise, false.</returns>
			<param name="type">The <see cref="T:System.Type"></see> to convert from.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether the conversion is allowed.</summary>
			<returns>true if the conversion is allowed; otherwise, false. </returns>
			<param name="type">The type to convert to.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversion.</param>
		</member>
		<member name="T:System.Configuration.ConfigurationElement">
			<summary>Represents a configuration element within a configuration file.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationElement"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
			<summary>Reads XML from the configuration file.</summary>
			<param name="reader">The <see cref="T:System.Xml.XmlReader"></see> that reads from the configuration file.</param>
			<param name="serializeCollectionKey">true to serialize only the collection key properties; otherwise, false.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
			<summary>Compares the current <see cref="T:System.Configuration.ConfigurationElement"></see> instance to the specified object.</summary>
			<returns>true if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElement"></see> instance; otherwise, false. The default is false. </returns>
			<param name="compareTo">The object to compare with.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.GetHashCode">
			<summary>Gets a unique value representing the <see cref="T:System.Configuration.ConfigurationElement"></see> current instance.</summary>
			<returns>A unique value representing the <see cref="T:System.Configuration.ConfigurationElement"></see> current instance.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.Init">
			<summary>Sets the <see cref="T:System.Configuration.ConfigurationElement"></see> object to its initial state.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
			<summary>Used to initialize a default set of values for the <see cref="T:System.Configuration.ConfigurationElement"></see> object.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.IsModified">
			<summary>Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.</summary>
			<returns>true if the element has been modified; otherwise, false. </returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
			<summary>Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"></see> object is read-only.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationElement"></see> object is read-only; otherwise, false.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
			<summary>Adds the invalid-property errors in this <see cref="T:System.Configuration.ConfigurationElement"></see> object, and in all subelements, to the passed list.</summary>
			<param name="errorList">An object that implements the <see cref="T:System.Collections.IList"></see> interface.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
			<summary>Gets a value indicating whether an unknown attribute is encountered during deserialization.</summary>
			<returns>true when an unknown attribute is encountered while deserializing.</returns>
			<param name="name">The name of the unrecognized attribute.</param>
			<param name="value">The value of the unrecognized attribute.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
			<summary>Gets a value indicating whether an unknown element is encountered during deserialization.</summary>
			<returns>true when an unknown element is encountered while deserializing.</returns>
			<param name="reader">The <see cref="T:System.Xml.XmlReader"></see> object being used for deserialization.</param>
			<param name="elementName">The name of the unknown subelement.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
			<summary>Gets a value indicating whether a required property is not found.</summary>
			<returns>true when a required property is not found while deserializing.</returns>
			<param name="name">The name of the required attribute that was not found.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
			<summary>Called after deserialization.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
			<summary>Called before serialization.</summary>
			<param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> object that will be used to serialize the <see cref="T:System.Configuration.ConfigurationElement"></see> object.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
			<summary>Resets the internal state of the <see cref="T:System.Configuration.ConfigurationElement"></see> object, including the locks and the properties collections.</summary>
			<param name="parentElement">The parent node of the configuration element.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.ResetModified">
			<summary>Resets the value of the <see cref="M:System.Configuration.ConfigurationElement.IsModified"></see> method to false when implemented in a derived class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
			<summary>Writes the contents of this configuration element to the configuration file when implemented in a derived class.</summary>
			<returns>true if any data was actually serialized; otherwise, false.</returns>
			<param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> that writes to the configuration file. </param>
			<param name="serializeCollectionKey">true to serialize only the collection key properties; otherwise, false. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
			<summary>Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.</summary>
			<returns>true if writing was successful.</returns>
			<param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> that writes to the configuration file. </param>
			<param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement"></see> to be written. </param>
			<exception cref="T:System.Exception">The element has multiple child elements. </exception>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
			<summary>Sets a property to the specified value.</summary>
			<param name="prop">The element property to set. </param>
			<param name="value">The value to assign to the property.</param>
			<param name="ignoreLocks">true if the locks on the property should be ignored; otherwise, false.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">If the element is read-only or ignoreLocks is true but the locks cannot be ignored.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
			<summary>Sets the <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly"></see> property for the <see cref="T:System.Configuration.ConfigurationElement"></see> object and all subelements.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
			<summary>Modifies the <see cref="T:System.Configuration.ConfigurationElement"></see> object to remove all values that should not be saved. </summary>
			<param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement"></see> object, or null if this is the top level.</param>
			<param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode"></see>  object that determines which property values to include.</param>
			<param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement"></see> object at the current level containing a merged view of the properties.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.ElementInformation">
			<summary>Gets an <see cref="T:System.Configuration.ElementInformation"></see> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationElement"></see> object. </summary>
			<returns>An <see cref="T:System.Configuration.ElementInformation"></see> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationElement"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.ElementProperty">
			<summary>Gets the <see cref="T:System.Configuration.ConfigurationElementProperty"></see> object that represents the <see cref="T:System.Configuration.ConfigurationElement"></see> object itself.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationElementProperty"></see> object that represents the <see cref="T:System.Configuration.ConfigurationElement"></see> object itself.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
			<summary>Gets the <see cref="T:System.Configuration.ContextInformation"></see> object for the <see cref="T:System.Configuration.ConfigurationElement"></see> object.</summary>
			<returns>The <see cref="T:System.Configuration.ContextInformation"></see> object for the <see cref="T:System.Configuration.ConfigurationElement"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
			<summary>Gets or sets a property or attribute of this configuration element.</summary>
			<returns>The specified property, attribute, or child element.</returns>
			<param name="prop">The property to access. </param>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
			<summary>Gets or sets a property, attribute, or child element of this configuration element.</summary>
			<returns>The specified property, attribute, or child element</returns>
			<param name="propertyName">The name of the <see cref="T:System.Configuration.ConfigurationProperty"></see>  to access.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
			<summary>Gets the collection of locked attributes.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection of locked attributes (properties) for the element.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
			<summary>Gets the collection of locked elements.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationLockCollection"></see> of locked elements.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.LockAttributes">
			<summary>Gets the collection of locked attributes </summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationLockCollection"></see> of locked attributes (properties) for the element.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.LockElements">
			<summary>Gets the collection of locked elements.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationLockCollection"></see> of locked elements.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.LockItem">
			<summary>Gets or sets a value indicating whether the element is locked.</summary>
			<returns>true if the element is locked; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElement.Properties">
			<summary>Gets the collection of properties.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> collection of properties for the element.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationElementCollection">
			<summary>Represents a configuration element containing a collection of child elements.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> class.</summary>
			<param name="comparer">The <see cref="T:System.Collections.IComparer"></see> comparer to use.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
			<summary>Adds a configuration element to the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</summary>
			<param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to add. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
			<summary>Adds a configuration element to the configuration element collection.</summary>
			<param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to add. </param>
			<param name="throwIfExists">true to throw an exception if the <see cref="T:System.Configuration.ConfigurationElement"></see> specified is already contained in the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>; otherwise, false. </param>
			<exception cref="T:System.Exception">The <see cref="T:System.Configuration.ConfigurationElement"></see> to add already exists in the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> and the throwIfExists parameter is true. </exception>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
			<summary>Adds a configuration element to the configuration element collection.</summary>
			<param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to add. </param>
			<param name="index">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement"></see>. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
			<summary>Removes all configuration element objects from the collection.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
			<summary>Gets the configuration element at the specified index location.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationElement"></see> at the specified index.</returns>
			<param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationElement"></see> to return. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
			<summary>Returns the configuration element with the specified key.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationElement"></see> with the specified key; otherwise, null.</returns>
			<param name="key">The key of the element to return. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
			<summary>Returns an array of the keys for all of the configuration elements contained in the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</summary>
			<returns>An array containing the keys for all of the <see cref="T:System.Configuration.ConfigurationElement"></see> objects contained in the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
			<summary>Gets the key for the <see cref="T:System.Configuration.ConfigurationElement"></see> at the specified index location.</summary>
			<returns>The key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.</returns>
			<param name="index">The index location for the <see cref="T:System.Configuration.ConfigurationElement"></see>.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
			<summary>The index of the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.</summary>
			<returns>The index of the specified <see cref="T:System.Configuration.ConfigurationElement"></see>; otherwise, -1.</returns>
			<param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> for the specified index location. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
			<summary>Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"></see> with the specified key has been removed from the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationElement"></see> with the specified key has been removed; otherwise, false. The default is false.</returns>
			<param name="key">The key of the element to check.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
			<summary>Removes a <see cref="T:System.Configuration.ConfigurationElement"></see> from the collection.</summary>
			<param name="key">The key of the <see cref="T:System.Configuration.ConfigurationElement"></see> to remove. </param>
			<exception cref="T:System.Exception">No <see cref="T:System.Configuration.ConfigurationElement"></see> with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its <see cref="P:System.Configuration.ConfigurationProperty.Type"></see> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap"></see>. </exception>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
			<summary>Removes the <see cref="T:System.Configuration.ConfigurationElement"></see> at the specified index location.</summary>
			<param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationElement"></see> to remove. </param>
			<exception cref="T:System.Exception">The <see cref="T:System.Configuration.ConfigurationElement"></see> has already been removed or the <see cref="T:System.Configuration.ConfigurationElement"></see> cannot be removed because the value of its <see cref="P:System.Configuration.ConfigurationProperty.Type"></see> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap"></see>. </exception>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
			<summary>Copies the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> to an array.</summary>
			<param name="array">Array to which to copy the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</param>
			<param name="index">Index location at which to begin copying.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
			<summary>When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.</summary>
			<returns>A new <see cref="T:System.Configuration.ConfigurationElement"></see>.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
			<summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement"></see> when overridden in a derived class.</summary>
			<returns>A new <see cref="T:System.Configuration.ConfigurationElement"></see>.</returns>
			<param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement"></see> to create. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
			<summary>Compares the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> to the specified object.</summary>
			<returns>true if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElementCollection"></see> instance; otherwise, false. The default is false.</returns>
			<param name="compareTo">The object to compare. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
			<summary>Gets the element key for a specified configuration element when overridden in a derived class.</summary>
			<returns>An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.</returns>
			<param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
			<summary>Gets an <see cref="T:System.Collections.IEnumerator"></see> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection"></see></returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
			<summary>Gets a unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> instance.</summary>
			<returns>A unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> current instance.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
			<summary>Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement"></see> exists in the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</summary>
			<returns>true if the element exists in the collection; otherwise, false. The default is false.</returns>
			<param name="elementName">The name of the element to verify. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
			<summary>Gets a value indicating whether the specified <see cref="T:System.Configuration.ConfigurationElement"></see> can be removed from the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</summary>
			<returns>true if the specified <see cref="T:System.Configuration.ConfigurationElement"></see> can be removed from this <see cref="T:System.Configuration.ConfigurationElementCollection"></see>; otherwise, false. The default is true.</returns>
			<param name="element">The element to check.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
			<summary>Indicates whether this <see cref="T:System.Configuration.ConfigurationElementCollection"></see> has been modified since it was last saved or loaded when overridden in a derived class.</summary>
			<returns>true if any contained element has been modified; otherwise, false</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
			<summary>Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> object is read only.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> object is read only; otherwise, false.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
			<summary>Causes the configuration system to throw an exception.</summary>
			<returns>true if the unrecognized element was deserialized successfully; otherwise, false. The default is false.</returns>
			<param name="reader">An input stream that reads XML from the configuration file. </param>
			<param name="elementName">The name of the unrecognized element. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
			<summary>Resets the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> to its unmodified state when overridden in a derived class.</summary>
			<param name="parentElement">The <see cref="T:System.Configuration.ConfigurationElement"></see> representing the collection parent element, if any; otherwise, null. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
			<summary>Resets the value of the <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified"></see> property to false when overridden in a derived class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
			<summary>Writes the configuration data to an XML element in the configuration file when overridden in a derived class.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> was written to the configuration file successfully.</returns>
			<param name="writer">Output stream that writes XML to the configuration file. </param>
			<param name="serializeCollectionKey">true to serialize the collection key; otherwise, false. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
			<summary>Sets the <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly"></see> property for the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> object and for all sub-elements.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> to an array.</summary>
			<param name="arr">Array to which to copy this <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</param>
			<param name="index">Index location at which to begin copying.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
			<summary>Reverses the effect of merging configuration information from different levels of the configuration hierarchy </summary>
			<param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement"></see> object of the current element, or null if this is the top level.</param>
			<param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode"></see> enumerated value that determines which property values to include.</param>
			<param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement"></see> object at the current level containing a merged view of the properties.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
			<summary>Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement"></see> to associate with the add operation in the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> when overridden in a derived class. </summary>
			<returns>The name of the element.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
			<summary>Gets or sets the name for the <see cref="T:System.Configuration.ConfigurationElement"></see> to associate with the clear operation in the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> when overridden in a derived class. </summary>
			<returns>The name of the element.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
			<summary>Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType"></see> of this collection.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.Count">
			<summary>Gets the number of elements in the collection.</summary>
			<returns>The number of elements in the collection.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
			<summary>Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.</summary>
			<returns>The name of the collection; otherwise, an empty string. The default is an empty string.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
			<summary>Specifies whether the collection has been cleared.</summary>
			<returns>true if the collection has been cleared; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
			<summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
			<returns>true if access to the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> is synchronized; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
			<summary>Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement"></see> to associate with the remove operation in the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> when overridden in a derived class. </summary>
			<returns>The name of the element.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
			<summary>Gets an object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</summary>
			<returns>An object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection"></see>.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
			<summary>Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement"></see> to the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> will cause an exception to be thrown.</summary>
			<returns>true if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement"></see> to this <see cref="T:System.Configuration.ConfigurationElementCollection"></see> will cause an exception to be thrown; otherwise, false. </returns>
		</member>
		<member name="T:System.Configuration.ConfigurationElementCollectionType">
			<summary>Specifies the type of a <see cref="T:System.Configuration.ConfigurationElementCollectionType"></see> object.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
			<summary>The default type of <see cref="T:System.Configuration.ConfigurationElementCollection"></see>. Collections of this type contain elements that can be merged across a hierarchy of configuration files. At any particular level within such a hierarchy, add, remove, and clear directives are used to modify any inherited properties and specify new ones.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
			<summary>Same as <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap"></see>, except that this type causes the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> object to sort its contents such that inherited elements are listed last.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
			<summary>Collections of this type contain elements that apply to the level at which they are specified, and to all child levels. A child level cannot modify the properties specified by a parent element of this type.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
			<summary>Same as <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap"></see>, except that this type causes the <see cref="T:System.Configuration.ConfigurationElementCollection"></see> object to sort its contents such that inherited elements are listed last.</summary>
		</member>
		<member name="T:System.Configuration.ConfigurationElementProperty">
			<summary>Specifies the property of a configuration element. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.ConfigurationElementProperty"></see> class based on a supplied parameter.</summary>
			<param name="validator">A <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> object.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationElementProperty.Validator">
			<summary>Gets a <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> object used to validate the <see cref="T:System.Configuration.ConfigurationElementProperty"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> object.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationErrorsException">
			<summary>The exception that is thrown when a configuration-system error has occurred.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="context">Contextual information about the source or destination.</param>
			<param name="info">The object that holds the information to deserialize.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
			<param name="inner">The exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
			<param name="node">The <see cref="T:System.Xml.XmlNode"></see> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="reader">The <see cref="T:System.Xml.XmlReader"></see> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
			<param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
			<param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
			<param name="node">The <see cref="T:System.Xml.XmlNode"></see> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="reader">The <see cref="T:System.Xml.XmlReader"></see> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
			<param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
			<param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
			<param name="line">The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
			<param name="filename">The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
			<summary>Initializes a new instance of a <see cref="T:System.Configuration.ConfigurationErrorsException"></see> class.</summary>
			<param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
			<param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
			<param name="line">The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</param>
			<param name="filename">The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
			<summary>Gets the path to the configuration file from which the internal <see cref="T:System.Xml.XmlNode"></see> object was loaded when this configuration exception was thrown.</summary>
			<returns>The path to the configuration file from which the internal <see cref="T:System.Xml.XmlNode"></see> object was loaded when this configuration exception was thrown. </returns>
			<param name="node">The <see cref="T:System.Xml.XmlNode"></see> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
			<summary>Gets the path to the configuration file that the internal <see cref="T:System.Xml.XmlReader"></see> was reading when this configuration exception was thrown.</summary>
			<returns>The path of the configuration file the internal <see cref="T:System.Xml.XmlReader"></see> object was accessing when the exception occurred.</returns>
			<param name="reader">The <see cref="T:System.Xml.XmlReader"></see> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
			<summary>Gets the line number within the configuration file that the internal <see cref="T:System.Xml.XmlNode"></see> object represented when this configuration exception was thrown.</summary>
			<returns>The line number within the configuration file that contains the <see cref="T:System.Xml.XmlNode"></see> object being parsed when this configuration exception was thrown.</returns>
			<param name="node">The <see cref="T:System.Xml.XmlNode"></see> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
			<summary>Gets the line number within the configuration file that the internal <see cref="T:System.Xml.XmlReader"></see> object was processing when this configuration exception was thrown.</summary>
			<returns>The line number within the configuration file that the <see cref="T:System.Xml.XmlReader"></see> object was accessing when the exception occurred.</returns>
			<param name="reader">The <see cref="T:System.Xml.XmlReader"></see> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception to be thrown.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object with the file name and line number at which this configuration exception occurred.</summary>
			<param name="context">The contextual information about the source or destination.</param>
			<param name="info">The object that holds the information to be serialized.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
			<summary>Gets a description of why this configuration exception was thrown.</summary>
			<returns>A description of why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> was thrown.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationErrorsException.Errors">
			<summary>Gets a collection of errors detailing the reasons this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</summary>
			<returns>An <see cref="T:System.Collections.ICollection"></see> object containing errors that identify the reasons this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationErrorsException.Filename">
			<summary>Gets the path to the configuration file that caused this configuration exception to be thrown.</summary>
			<returns>The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> to be thrown.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationErrorsException.Line">
			<summary>Gets the line number within the configuration file at which this configuration exception was thrown.</summary>
			<returns>The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationErrorsException.Message">
			<summary>Gets an extended description of why this configuration exception was thrown.</summary>
			<returns>An extended description of why this <see cref="T:System.Configuration.ConfigurationErrorsException"></see> exception was thrown.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationFileMap">
			<summary>Defines the configuration file mapping for the machine configuration file. </summary>
		</member>
		<member name="M:System.Configuration.ConfigurationFileMap.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationFileMap"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationFileMap"></see> class based on the supplied parameter.</summary>
			<param name="machineConfigFilename">The name of the machine configuration file.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationFileMap.Clone">
			<summary>Creates a copy of the existing <see cref="T:System.Configuration.ConfigurationFileMap"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationFileMap"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
			<summary>Gets or sets the name of the machine configuration file name.</summary>
			<returns>The machine configuration file name.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationLocation">
			<summary>Represents a location element within a configuration file.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
			<summary>Creates an instance of a Configuration object.</summary>
			<returns>A Configuration object.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationLocation.Path">
			<summary>Gets the relative path to the resource whose configuration settings are represented by this <see cref="T:System.Configuration.ConfigurationLocation"></see> object.</summary>
			<returns>The relative path to the resource whose configuration settings are represented by this <see cref="T:System.Configuration.ConfigurationLocation"></see>.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationLocationCollection">
			<summary>Contains a collection of <see cref="T:System.Configuration.ConfigurationLocationCollection"></see> objects.</summary>
		</member>
		<member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
			<summary>Gets the <see cref="T:System.Configuration.ConfigurationLocationCollection"></see> object at the specified index.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationLocationCollection"></see> at the specified index.</returns>
			<param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationLocationCollection"></see> to return.</param>
		</member>
		<member name="T:System.Configuration.ConfigurationLockCollection">
			<summary>Contains a collection of locked configuration objects. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
			<summary>Locks a configuration object by adding it to the collection.</summary>
			<param name="name">The name of the configuration object.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when the name does not match an existing configuration object within the collection.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.Clear">
			<summary>Clears all configuration objects from the collection.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
			<summary>Verifies whether a specific configuration object is locked.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationLockCollection"></see> contains the specified configuration object; otherwise, false.</returns>
			<param name="name">The name of the configuration object to verify.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
			<summary>Copies the entire <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection to a compatible one-dimensional <see cref="T:System.Array"></see>, starting at the specified index of the target array.</summary>
			<param name="array">A one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from the <see cref="T:System.Configuration.ConfigurationLockCollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
			<param name="index">The zero-based index in array at which copying begins.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
			<summary>Gets an <see cref="T:System.Collections.IEnumerator"></see> object, which is used to iterate through this <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> object.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
			<summary>Verifies whether a specific configuration object is read-only.</summary>
			<returns>true if the specified configuration object in the <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection is read-only; otherwise, false.</returns>
			<param name="name">The name of the configuration object to verify.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
			<summary>Removes a configuration object from the collection.</summary>
			<param name="name">The name of the configuration object.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when the name does not match an existing configuration object within the collection.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
			<summary>Locks a set of configuration objects based on the supplied list.</summary>
			<param name="attributeList">A comma-delimited string.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when an item in the attributeList parameter is not a valid lockable configuration attribute.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationLockCollection.System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the entire <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection to a compatible one-dimensional <see cref="T:System.Array"></see>, starting at the specified index of the target array.</summary>
			<param name="array">A one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from the <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
			<param name="index">The zero-based index in array at which copying begins.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
			<summary>Gets a list of configuration objects contained in the collection.</summary>
			<returns>A comma-delimited string that lists the lock configuration objects in the collection.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationLockCollection.Count">
			<summary>Gets the number of locked configuration objects contained in the collection.</summary>
			<returns>The number of locked configuration objects contained in the collection.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
			<summary>Gets a value specifying whether the collection of locked objects has parent elements.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection has parent elements; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
			<summary>Gets a value specifying whether the collection has been modified.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection has been modified; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
			<summary>Gets a value specifying whether the collection is synchronized.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection is synchronized; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
			<summary>Gets an object used to synchronize access to this <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection.</summary>
			<returns>An object used to synchronize access to this <see cref="T:System.Configuration.ConfigurationLockCollection"></see> collection.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationManager">
			<summary>Provides access to configuration files for client applications. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
			<summary>Retrieves a specified configuration section for the current application's default configuration.</summary>
			<returns>The specified <see cref="T:System.Configuration.ConfigurationSection"></see> object, or null if the section does not exist.</returns>
			<param name="sectionName">The configuration section path and name.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
			<summary>Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.Configuration"></see> object.</returns>
			<param name="userLevel">The <see cref="T:System.Configuration.ConfigurationUserLevel"></see> for which you are opening the configuration.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
			<summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.Configuration"></see> object.</returns>
			<param name="exePath">The path to the configuration file associated with the executable file. </param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
			<summary>Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.Configuration"></see> object.</returns>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
			<summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration"></see> object using the specified file mapping and user level.</summary>
			<returns>A <see cref="T:System.Configuration.Configuration"></see> object.</returns>
			<param name="fileMap">An <see cref="T:System.Configuration.ExeConfigurationFileMap"></see> object that references configuration file to use instead of the application default configuration file.</param>
			<param name="userLevel">The <see cref="T:System.Configuration.ConfigurationUserLevel"></see> for which you are opening the configuration.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
			<summary>Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration"></see> object using the specified file mapping.</summary>
			<returns>A <see cref="T:System.Configuration.Configuration"></see> object.</returns>
			<param name="fileMap">An <see cref="T:System.Configuration.ExeConfigurationFileMap"></see> object that references configuration file to use instead of the application default configuration file.</param>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
			<summary>Refreshes the named section so the next time it is retrieved it will be re-read from disk.</summary>
			<param name="sectionName">The configuration section name or the configuration path and section name of the section to refresh.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationManager.AppSettings">
			<summary>Gets the <see cref="T:System.Configuration.AppSettingsSection"></see> data for the current application's default configuration.</summary>
			<returns>Returns a <see cref="T:System.Collections.Specialized.NameValueCollection"></see> object containing the contents of the <see cref="T:System.Configuration.AppSettingsSection"></see> object for the current application's default configuration. </returns>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection"></see> object with the application settings data.</exception>
		</member>
		<member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
			<summary>Gets the <see cref="T:System.Configuration.ConnectionStringsSection"></see> data for the current application's default configuration.</summary>
			<returns>Returns a <see cref="T:System.Configuration.ConnectionStringSettingsCollection"></see> object containing the contents of the <see cref="T:System.Configuration.ConnectionStringsSection"></see> object for the current application's default configuration. </returns>
			<exception cref="T:System.Configuration.ConfigurationErrorsException">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection"></see> object.</exception>
		</member>
		<member name="T:System.Configuration.ConfigurationPermission">
			<summary>Provides a permission structure that allows methods or classes to access configuration files. </summary>
		</member>
		<member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPermission"></see> class. </summary>
			<param name="state">The permission level to grant.</param>
			<exception cref="T:System.ArgumentException">The value of state is neither <see cref="F:System.Security.Permissions.PermissionState.Unrestricted"></see> nor <see cref="F:System.Security.Permissions.PermissionState.None"></see>.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationPermission.Copy">
			<summary>Returns a new <see cref="T:System.Configuration.ConfigurationPermission"></see> object with the same permission level.</summary>
			<returns>A new <see cref="T:System.Configuration.ConfigurationPermission"></see> with the same permission level.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
			<summary>Reads the value of the permission state from XML.</summary>
			<param name="securityElement">The configuration element from which the permission state is read.</param>
			<exception cref="T:System.ArgumentException">The class attribute of the given securityElement equals null.</exception>
			<exception cref="T:System.ArgumentException">The <see cref="P:System.Security.SecurityElement.Tag"></see> for the given securityElement does not equal "IPermission".</exception>
			<exception cref="T:System.ArgumentException">The class attribute of the given securityElement is not the type name for <see cref="T:System.Configuration.ConfigurationPermission"></see>.</exception>
			<exception cref="T:System.ArgumentNullException">securityElement is null.</exception>
			<exception cref="T:System.ArgumentException">The unrestricted attribute for the given securityElement is neither true nor false.</exception>
			<exception cref="T:System.ArgumentException">The version attribute for the given securityElement does not equal 1.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
			<summary>Returns the logical intersection between the <see cref="T:System.Configuration.ConfigurationPermission"></see> object and a given object that implements the <see cref="T:System.Security.IPermission"></see> interface.</summary>
			<returns>The logical intersection between the <see cref="T:System.Configuration.ConfigurationPermission"></see> and a given object that implements <see cref="T:System.Security.IPermission"></see>.</returns>
			<param name="target">The object containing the permissions to perform the intersection with.</param>
			<exception cref="T:System.ArgumentException">target is not typed as <see cref="T:System.Configuration.ConfigurationPermission"></see>.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
			<summary>Compares the <see cref="T:System.Configuration.ConfigurationPermission"></see> object with an object implementing the <see cref="T:System.Security.IPermission"></see> interface.</summary>
			<returns>true if the permission state is equal; otherwise, false.</returns>
			<param name="target">The object to compare to.</param>
			<exception cref="T:System.ArgumentException">target is not typed as <see cref="T:System.Configuration.ConfigurationPermission"></see>.</exception>
		</member>
		<member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
			<summary>Indicates whether the permission state for the <see cref="T:System.Configuration.ConfigurationPermission"></see> object is the <see cref="F:System.Security.Permissions.PermissionState.Unrestricted"></see> value of the <see cref="T:System.Security.Permissions.PermissionState"></see> enumeration.</summary>
			<returns>true if the permission state for the <see cref="T:System.Configuration.ConfigurationPermission"></see> is the <see cref="F:System.Security.Permissions.PermissionState.Unrestricted"></see> value of <see cref="T:System.Security.Permissions.PermissionState"></see>; otherwise, false.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationPermission.ToXml">
			<summary>Returns a <see cref="T:System.Security.SecurityElement"></see> object with attribute values based on the current <see cref="T:System.Configuration.ConfigurationPermission"></see> object.</summary>
			<returns>A <see cref="T:System.Security.SecurityElement"></see> with attribute values based on the current <see cref="T:System.Configuration.ConfigurationPermission"></see>.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
			<summary>Returns the logical union of the <see cref="T:System.Configuration.ConfigurationPermission"></see> object and an object that implements the <see cref="T:System.Security.IPermission"></see> interface.</summary>
			<returns>The logical union of the <see cref="T:System.Configuration.ConfigurationPermission"></see> and an object that implements <see cref="T:System.Security.IPermission"></see>.</returns>
			<param name="target">The object to perform the union with.</param>
			<exception cref="T:System.ArgumentException">target is not typed as <see cref="T:System.Configuration.ConfigurationPermission"></see>.</exception>
		</member>
		<member name="T:System.Configuration.ConfigurationPermissionAttribute">
			<summary>Creates a <see cref="T:System.Configuration.ConfigurationPermission"></see> object that either grants or denies the marked target permission to access sections of configuration files.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPermissionAttribute"></see> class. </summary>
			<param name="action">The security action that determines the permission state of the attribute.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
			<summary>Creates and returns an object that implements the <see cref="T:System.Security.IPermission"></see> interface.</summary>
			<returns>Returns an object that implements <see cref="T:System.Security.IPermission"></see>.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationProperty">
			<summary>Represents an attribute or a child of a configuration element. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationProperty"></see> class.</summary>
			<param name="type">The type of the configuration entity. </param>
			<param name="name">The name of the configuration entity. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationProperty"></see> class.</summary>
			<param name="type">The type of the configuration entity. </param>
			<param name="defaultValue">The default value of the configuration entity. </param>
			<param name="name">The name of the configuration entity. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationProperty"></see> class.</summary>
			<param name="type">The type of the configuration entity. </param>
			<param name="defaultValue">The default value of the configuration entity. </param>
			<param name="name">The name of the configuration entity. </param>
			<param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions"></see> enumeration values.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationProperty"></see> class.</summary>
			<param name="type">The type of the configuration entity.</param>
			<param name="validator">The validator to use. </param>
			<param name="defaultValue">The default value of the configuration entity. </param>
			<param name="name">The name of the configuration entity. </param>
			<param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions"></see> enumeration values. </param>
			<param name="typeConverter">The type of the converter to apply.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationProperty"></see> class.</summary>
			<param name="type">The type of the configuration entity. </param>
			<param name="description">The description of the configuration entity. </param>
			<param name="validator">The validator to use. </param>
			<param name="defaultValue">The default value of the configuration entity. </param>
			<param name="name">The name of the configuration entity. </param>
			<param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions"></see> enumeration values. </param>
			<param name="typeConverter">The type of the converter to apply.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.Converter">
			<summary>Gets the <see cref="T:System.ComponentModel.TypeConverter"></see> used to convert this <see cref="T:System.Configuration.ConfigurationProperty"></see> into an XML representation for writing to the configuration file.</summary>
			<returns>A <see cref="T:System.ComponentModel.TypeConverter"></see> used to convert this <see cref="T:System.Configuration.ConfigurationProperty"></see> into an XML representation for writing to the configuration file.</returns>
			<exception cref="T:System.Exception">This <see cref="T:System.Configuration.ConfigurationProperty"></see> cannot be converted. </exception>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
			<summary>Gets the default value for this <see cref="T:System.Configuration.ConfigurationProperty"></see> property.</summary>
			<returns>An <see cref="T:System.Object"></see> that can be cast to the type specified by the <see cref="P:System.Configuration.ConfigurationProperty.Type"></see> property.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.Description">
			<summary>Gets the description associated with the <see cref="T:System.Configuration.ConfigurationProperty"></see>.</summary>
			<returns>A string value that describes the property.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
			<summary>Gets or sets whether the property is the default collection of an element. </summary>
			<returns>true if the property is the default collection of an element; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.IsKey">
			<summary>Gets a value indicating whether this <see cref="T:System.Configuration.ConfigurationProperty"></see> is the key for the containing <see cref="T:System.Configuration.ConfigurationElement"></see> object.</summary>
			<returns>true if this <see cref="T:System.Configuration.ConfigurationProperty"></see> object is the key for the containing element; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.IsRequired">
			<summary>Gets a value indicating whether this <see cref="T:System.Configuration.ConfigurationProperty"></see> is required.</summary>
			<returns>true if the <see cref="T:System.Configuration.ConfigurationProperty"></see> is required; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.Name">
			<summary>Gets the name of this <see cref="T:System.Configuration.ConfigurationProperty"></see>.</summary>
			<returns>The name of the <see cref="T:System.Configuration.ConfigurationProperty"></see>.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.Type">
			<summary>Gets the type of this <see cref="T:System.Configuration.ConfigurationProperty"></see> object.</summary>
			<returns>A <see cref="T:System.Type"></see> representing the type of this <see cref="T:System.Configuration.ConfigurationProperty"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationProperty.Validator">
			<summary>Gets the <see cref="T:System.Configuration.ConfigurationValidatorAttribute"></see>, which is used to validate this <see cref="T:System.Configuration.ConfigurationProperty"></see> object.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> validator, which is used to validate this <see cref="T:System.Configuration.ConfigurationProperty"></see>.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationPropertyAttribute">
			<summary>Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
			<summary>Initializes a new instance of <see cref="T:System.Configuration.ConfigurationPropertyAttribute"></see> class.</summary>
			<param name="name">Name of the <see cref="T:System.Configuration.ConfigurationProperty"></see> object defined.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
			<summary>Gets or sets the default value for the decorated property.</summary>
			<returns>The object representing the default value of the decorated configuration-element property.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
			<summary>Gets or sets a value indicating whether this is the default property collection for the decorated configuration property. </summary>
			<returns>true if the property represents the default collection of an element; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
			<summary>Gets or sets a value indicating whether this is a key property for the decorated element property.</summary>
			<returns>true if the property is a key property for an element of the collection; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
			<summary>Gets or sets a value indicating whether the decorated element property is required.</summary>
			<returns>true if the property is required; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
			<summary>Gets or sets the name of the decorated configuration-element property.</summary>
			<returns>The name of the decorated configuration-element property.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
			<summary>Gets or sets the <see cref="T:System.Configuration.ConfigurationPropertyOptions"></see> for the decorated configuration-element property.</summary>
			<returns>One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions"></see> enumeration values associated with the property.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationPropertyCollection">
			<summary>Represents a collection of configuration-element properties.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
			<summary>Creates a new instance of <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see>.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
			<summary>Adds a configuration property to the collection.</summary>
			<param name="property">The <see cref="T:System.Configuration.ConfigurationProperty"></see>  to add. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
			<summary>Removes all configuration property objects from the collection.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
			<summary>Specifies whether the configuration property is contained in this collection.</summary>
			<returns>true if the specified <see cref="T:System.Configuration.ConfigurationProperty"></see> is contained in the collection; otherwise, false.</returns>
			<param name="name">An identifier for the <see cref="T:System.Configuration.ConfigurationProperty"></see> to verify. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
			<summary>Copies this ConfigurationPropertyCollection to an array.</summary>
			<param name="array">Array to which to copy.</param>
			<param name="index">Index at which to begin copying.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
			<summary>Gets the <see cref="T:System.Collections.IEnumerator"></see> object as it applies to the collection.</summary>
			<returns>The <see cref="T:System.Collections.IEnumerator"></see> object as it applies to the collection</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
			<summary>Removes a configuration property from the collection.</summary>
			<returns>true if the specified <see cref="T:System.Configuration.ConfigurationProperty"></see> was removed; otherwise, false.</returns>
			<param name="name">The <see cref="T:System.Configuration.ConfigurationProperty"></see> to remove. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies this collection to an array.</summary>
			<param name="array">The array to which to copy.</param>
			<param name="index">The index location at which to begin copying.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
			<summary>Gets the number of properties in the collection.</summary>
			<returns>The number of properties in the collection.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
			<summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
			<returns>true if access to the <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> is synchronized; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
			<summary>Allows access to the collection.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationProperty"></see> with the specified name.</returns>
			<param name="name">The <see cref="T:System.Configuration.ConfigurationProperty"></see> to return. </param>
		</member>
		<member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
			<summary>Gets the object to synchronize access to the collection.</summary>
			<returns>The object to synchronize access to the collection.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationPropertyOptions">
			<summary>Specifies the options to apply to a property.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
			<summary>Indicates that the property is a default collection. </summary>
		</member>
		<member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
			<summary>Indicates that the property is a collection key.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
			<summary>Indicates that the property is required. </summary>
		</member>
		<member name="F:System.Configuration.ConfigurationPropertyOptions.None">
			<summary>Indicates that no option applies to the property.</summary>
		</member>
		<member name="T:System.Configuration.ConfigurationSaveMode">
			<summary>Determines which properties are written out to a configuration file.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationSaveMode.Full">
			<summary>Causes all properties to be written to the configuration file. This is useful mostly for creating information configuration files or moving configuration values from one machine to another.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
			<summary>Causes only properties that differ from inherited values to be written to the configuration file.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationSaveMode.Modified">
			<summary>Causes only modified properties to be written to the configuration file, even when the value is the same as the inherited value.</summary>
		</member>
		<member name="T:System.Configuration.ConfigurationSection">
			<summary>Represents a section within a configuration file.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSection"></see> class. </summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
			<summary>Reads XML from the configuration file.</summary>
			<param name="reader">The <see cref="T:System.Xml.XmlReader"></see>, which reads from the configuration file. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
			<summary>Returns a custom object when overridden in a derived class.</summary>
			<returns>The object representing the section.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationSection.IsModified">
			<summary>Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.</summary>
			<returns>true if the element has been modified; otherwise, false. </returns>
		</member>
		<member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
			<summary>Creates an XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection"></see> object as a single section to write to a file.</summary>
			<returns>An XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection"></see> object.</returns>
			<param name="parentElement">The <see cref="T:System.Configuration.ConfigurationElement"></see> object to use as the parent when performing the un-merge.</param>
			<param name="name">The name of the section to create.</param>
			<param name="saveMode">The <see cref="T:System.Configuration.ConfigurationSaveMode"></see> to use when writing to a string.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationSection.SectionInformation">
			<summary>Gets a <see cref="T:System.Configuration.SectionInformation"></see> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection"></see> object. </summary>
			<returns>A <see cref="T:System.Configuration.SectionInformation"></see> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection"></see> object.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationSectionCollection">
			<summary>Represents a collection of related sections within a configuration file.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
			<summary>Adds a <see cref="T:System.Configuration.ConfigurationSection"></see> object to the <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<param name="name">The name of the section to be added.</param>
			<param name="section">The section to be added.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
			<summary>Clears this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
			<summary>Copies this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see> object to an array.</summary>
			<param name="array">The array to which to copy.</param>
			<param name="index">The index location at which to begin copying.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
			<summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection"></see> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSection"></see> object at the specified index.</returns>
			<param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection"></see> object to be returned.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
			<summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection"></see> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSection"></see> object with the specified name.</returns>
			<param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSection"></see> object to be returned.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
			<summary>Gets an enumerator that can iterate through this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<returns>A <see cref="T:System.Collections.IEnumerator"></see> that can be used to iterate through this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
			<summary>Gets the key of the specified <see cref="T:System.Configuration.ConfigurationSection"></see> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<returns>Key of the <see cref="T:System.Configuration.ConfigurationSection"></see> at the specified index.</returns>
			<param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection"></see> object whose key is to be returned. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Used by the system during serialization.</summary>
			<param name="context">The applicable <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object.</param>
			<param name="info">The applicable <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
			<summary>Removes the specified <see cref="T:System.Configuration.ConfigurationSection"></see> object from this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<param name="name">The name of the section to be removed. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
			<summary>Removes the specified <see cref="T:System.Configuration.ConfigurationSection"></see> object from this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<param name="index">The index of the section to be removed. </param>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionCollection.Count">
			<summary>Gets the number of sections in this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<returns>An integer representing the number of sections in the collection.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
			<summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection"></see> object.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSection"></see> object at the specified index.</returns>
			<param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection"></see> object to be returned. </param>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
			<summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection"></see> object.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSection"></see> object with the specified name.</returns>
			<param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSection"></see> object to be returned. </param>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
			<summary>Gets the keys to all <see cref="T:System.Configuration.ConfigurationSection"></see> objects contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection"></see>.</summary>
			<returns>A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"></see> object containing the keys of all sections in this collection.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationSectionGroup">
			<summary>Represents a grouping of related sections within a configuration file.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> class. </summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
			<summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
			<summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</summary>
			<param name="force">true if the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> must be written to the file; otherwise, false.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
			<summary>Gets a value indicating whether this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object declaration is required. </summary>
			<returns>true if this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> declaration is required; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
			<summary>Gets a value indicating whether this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object is declared.</summary>
			<returns>true if this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> is declared; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroup.Name">
			<summary>Gets the name property of this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</summary>
			<returns>The name property of this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
			<summary>Gets the section group name associated with this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see>.</summary>
			<returns>The section group name of this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
			<summary>Gets a <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object containing all of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> objects that are children of this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object containing all of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> objects that are children of this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see>.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
			<summary>Gets a <see cref="T:System.Configuration.ConfigurationSectionCollection"></see> containing all of the <see cref="T:System.Configuration.ConfigurationSection"></see> objects within this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see>.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationSectionCollection"></see> containing all of the <see cref="T:System.Configuration.ConfigurationSection"></see> objects within this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see>.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroup.Type">
			<summary>Gets or sets the type for this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</summary>
			<returns>Type of this <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationSectionGroupCollection">
			<summary>Represents a collection of <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> objects.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
			<summary>Adds a <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object to this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see>.</summary>
			<param name="sectionGroup">The <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object to be added.</param>
			<param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object to be added.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
			<summary>Clears the collection.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
			<summary>Copies this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see> to an array.</summary>
			<param name="array">The array to which to copy.</param>
			<param name="index">The index location at which to begin copying.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
			<summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object contained in the collection.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object at the specified index.</returns>
			<param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object to be returned. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
			<summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object from the collection.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object with the specified name.</returns>
			<param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object to be returned. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
			<summary>Gets an enumerator that can iterate through the <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see> object.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> that can be used to iterate through the <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see> object.</returns>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
			<summary>Gets the key of the specified <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object contained in this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see>.</summary>
			<returns>The key of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object at the specified index.</returns>
			<param name="index">The index of the section group whose key is to be returned. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Used by the system during serialization.</summary>
			<param name="context">The applicable <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object.</param>
			<param name="info">The applicable <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
			<summary>Removes the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object whose name is specified from this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see>.</summary>
			<param name="name">Name of the section group to be removed. </param>
		</member>
		<member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
			<summary>Removes the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object whose index is specified from this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see>.</summary>
			<param name="index">The index of the section group to be removed. </param>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
			<summary>Gets the number of section groups in the collection.</summary>
			<returns>An integer representing the number of section groups in the collection.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
			<summary>Gets the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object whose index is specified from the collection.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object at the specified index.In C#, this property is the indexer for the <see cref="T:System.Configuration.ConfigurationSectionCollection"></see> class. </returns>
			<param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object to be returned. </param>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
			<summary>Gets the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object whose name is specified from the collection.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object with the specified name.In C#, this property is the indexer for the <see cref="T:System.Configuration.ConfigurationSectionCollection"></see> class. </returns>
			<param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> object to be returned. </param>
		</member>
		<member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
			<summary>Gets the keys to all <see cref="T:System.Configuration.ConfigurationSectionGroup"></see> objects contained in this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"></see>.</summary>
			<returns>A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"></see> object containing the names of all section groups in this collection.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationUserLevel">
			<summary>Used to specify which configuration file is to be represented by the Configuration object returned by <see cref="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)"></see>.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationUserLevel.None">
			<summary>Get the <see cref="T:System.Configuration.Configuration"></see> that applies to all users.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
			<summary>Get the roaming <see cref="T:System.Configuration.Configuration"></see> that applies to the current user.</summary>
		</member>
		<member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
			<summary>Get the local <see cref="T:System.Configuration.Configuration"></see> that applies to the current user.</summary>
		</member>
		<member name="T:System.Configuration.ConfigurationValidatorAttribute">
			<summary>Serves as the base class for the <see cref="N:System.Configuration"></see> validator attribute types.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationValidatorAttribute"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationValidatorAttribute"></see> class using the specified validator type.</summary>
			<param name="validator">The validator type to use when creating an instance of <see cref="T:System.Configuration.ConfigurationValidatorAttribute"></see>.</param>
		</member>
		<member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
			<summary>Gets the validator attribute instance.</summary>
			<returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase"></see>.</returns>
		</member>
		<member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
			<summary>Gets the type of the validator attribute.</summary>
			<returns>The <see cref="T:System.Type"></see> of the current validator attribute instance.</returns>
		</member>
		<member name="T:System.Configuration.ConfigurationValidatorBase">
			<summary>Acts as a base class for deriving a validation class so that a value of an object can be verified.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
			<summary>Determines whether an object can be validated based on type.</summary>
			<returns>true if the type parameter value matches the expected type; otherwise, false. </returns>
			<param name="type">The object type.</param>
		</member>
		<member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid. </summary>
			<param name="value">The object value.</param>
		</member>
		<member name="T:System.Configuration.ConnectionStringSettings">
			<summary>Represents a single, named connection string in the connection strings configuration file section.</summary>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettings.#ctor">
			<summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings"></see> class.</summary>
			<param name="connectionString">The connection string.</param>
			<param name="name">The name of the connection string.</param>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
			<summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings"></see> object.</summary>
			<param name="connectionString">The connection string.</param>
			<param name="name">The name of the connection string.</param>
			<param name="providerName">The name of the provider to use with the connection string.</param>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettings.ToString">
			<summary>Returns a string representation of the object.</summary>
			<returns>A string representation of the object.</returns>
		</member>
		<member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
			<summary>Gets or sets the connection string.</summary>
			<returns>The string value assigned to the <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString"></see> property.</returns>
		</member>
		<member name="P:System.Configuration.ConnectionStringSettings.Name">
			<summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings"></see> name.</summary>
			<returns>The string value assigned to the <see cref="P:System.Configuration.ConnectionStringSettings.Name"></see> property.</returns>
		</member>
		<member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
			<summary>Gets or sets the provider name property.</summary>
			<returns>Gets or sets the <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName"></see> property.</returns>
		</member>
		<member name="T:System.Configuration.ConnectionStringSettingsCollection">
			<summary>Contains a collection of <see cref="T:System.Configuration.ConnectionStringSettings"></see> objects.</summary>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
			<summary>Creates a new instance of a <see cref="T:System.Configuration.ConnectionStringSettingsCollection"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
			<summary>Adds a <see cref="T:System.Configuration.ConnectionStringSettings"></see> object to the collection.</summary>
			<param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings"></see> object to add to the collection.</param>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
			<summary>Removes all the <see cref="T:System.Configuration.ConnectionStringSettings"></see> objects from the collection.</summary>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
			<summary>Returns the index in the collection of the passed <see cref="T:System.Configuration.ConnectionStringSettings"></see> object.</summary>
			<returns>The collection index of the specified <see cref="T:System.Configuration.ConnectionStringSettingsCollection"></see> object.</returns>
			<param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings"></see> object in the collection.</param>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
			<summary>Removes the specified <see cref="T:System.Configuration.ConnectionStringSettings"></see> object from the collection.</summary>
			<param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings"></see> object in the collection.</param>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
			<summary>Removes the specified <see cref="T:System.Configuration.ConnectionStringSettings"></see> object from the collection.</summary>
			<param name="name">The name of a <see cref="T:System.Configuration.ConnectionStringSettings"></see> object in the collection.</param>
		</member>
		<member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
			<summary>Removes the <see cref="T:System.Configuration.ConnectionStringSettings"></see> object at the specified index in the collection.</summary>
			<param name="index">The index of a <see cref="T:System.Configuration.ConnectionStringSettings"></see> object in the collection.</param>
		</member>
		<member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
			<summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings"></see> object at the specified index in the collection.</summary>
			<returns>The <see cref="T:System.Configuration.ConnectionStringSettings"></see> object at the specified index.</returns>
			<param name="index">The index of a <see cref="T:System.Configuration.ConnectionStringSettings"></see> object in the collection.</param>
		</member>
		<member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
			<summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings"></see> object with the specified name in the collection.</summary>
			<returns>The <see cref="T:System.Configuration.ConnectionStringSettings"></see> object with the specified name.</returns>
			<param name="name">The name of a <see cref="T:System.Configuration.ConnectionStringSettings"></see> object in the collection.</param>
		</member>
		<member name="T:System.Configuration.ConnectionStringsSection">
			<summary>Provides programmatic access to the connection strings configuration-file section.</summary>
		</member>
		<member name="M:System.Configuration.ConnectionStringsSection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ConnectionStringsSection"></see> class.</summary>
		</member>
		<member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
			<summary>Gets a <see cref="T:System.Configuration.ConnectionStringSettingsCollection"></see> collection of <see cref="T:System.Configuration.ConnectionStringSettings"></see> objects.</summary>
			<returns>A <see cref="T:System.Configuration.ConnectionStringSettingsCollection"></see> collection of <see cref="T:System.Configuration.ConnectionStringSettings"></see> objects.</returns>
		</member>
		<member name="T:System.Configuration.ContextInformation">
			<summary>Encapsulates the context information that is associated with a <see cref="T:System.Configuration.ConfigurationElement"></see> object. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
			<summary>Provides an object containing configuration-section information based on the specified section name.</summary>
			<returns>An object containing the specified section within the configuration.</returns>
			<param name="sectionName">The name of the configuration section.</param>
		</member>
		<member name="P:System.Configuration.ContextInformation.HostingContext">
			<summary>Gets the context of the environment where the configuration property is being evaluated.</summary>
			<returns>An object specifying the environment where the configuration property is being evaluated.</returns>
		</member>
		<member name="P:System.Configuration.ContextInformation.IsMachineLevel">
			<summary>Gets a value specifying whether the configuration property is being evaluated at the machine configuration level.</summary>
			<returns>true if the configuration property is being evaluated at the machine configuration level; otherwise, false.</returns>
		</member>
		<member name="T:System.Configuration.DefaultSection">
			<summary>Represents a basic configuration-section handler that exposes the configuration section's XML for both read and write access.</summary>
		</member>
		<member name="M:System.Configuration.DefaultSection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.DefaultSection"></see> class. </summary>
		</member>
		<member name="T:System.Configuration.DefaultValidator">
			<summary>Provides validation of an object. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.DefaultValidator.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.DefaultValidator"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
			<summary>Determines whether an object can be validated, based on type.</summary>
			<returns>true for all types being validated. </returns>
			<param name="type">The object type.</param>
		</member>
		<member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid. </summary>
			<param name="value">The object value.</param>
		</member>
		<member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
			<summary>Provides a <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object that uses the Windows data protection API (DPAPI) to encrypt and decrypt configuration data.</summary>
		</member>
		<member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider"></see> class using default settings.</summary>
		</member>
		<member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
			<summary>Decrypts the passed <see cref="T:System.Xml.XmlNode"></see> object.</summary>
			<returns>A decrypted <see cref="T:System.Xml.XmlNode"></see> object.</returns>
			<param name="encryptedNode">The <see cref="T:System.Xml.XmlNode"></see> object to decrypt. </param>
		</member>
		<member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
			<summary>Encrypts the passed <see cref="T:System.Xml.XmlNode"></see> object.</summary>
			<returns>An encrypted <see cref="T:System.Xml.XmlNode"></see> object.</returns>
			<param name="node">The <see cref="T:System.Xml.XmlNode"></see> object to encrypt. </param>
		</member>
		<member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
			<summary>Initializes the provider with default settings.</summary>
			<param name="configurationValues">A <see cref="T:System.Collections.Specialized.NameValueCollection"></see> collection of values to use when initializing the object.</param>
			<param name="name">The provider name to use for the object.</param>
		</member>
		<member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
			<summary>Gets a value that indicates whether the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider"></see> object is using machine-specific or user-account-specific protection.</summary>
			<returns>true if the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider"></see> is using machine-specific protection; false if it is using user-account-specific protection.</returns>
		</member>
		<member name="T:System.Configuration.ElementInformation">
			<summary>Contains meta-information about an individual element within the configuration. This class cannot be inherited.</summary>
		</member>
		<member name="P:System.Configuration.ElementInformation.Errors">
			<summary>Gets the errors for the associated element and subelements</summary>
			<returns>The collection containing the errors for the associated element and subelements</returns>
		</member>
		<member name="P:System.Configuration.ElementInformation.IsCollection">
			<summary>Gets a value indicating whether the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object is a <see cref="T:System.Configuration.ConfigurationElementCollection"></see> collection.</summary>
			<returns>true if the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object is a <see cref="T:System.Configuration.ConfigurationElementCollection"></see> collection; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ElementInformation.IsLocked">
			<summary>Gets a value indicating whether the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object cannot be modified.</summary>
			<returns>true if the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object cannot be modified; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ElementInformation.IsPresent">
			<summary>Gets a value indicating whether the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object is in the configuration file.</summary>
			<returns>true if the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object is in the configuration file; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.ElementInformation.LineNumber">
			<summary>Gets the line number in the configuration file where the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object is defined.</summary>
			<returns>The line number in the configuration file where the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object is defined.</returns>
		</member>
		<member name="P:System.Configuration.ElementInformation.Properties">
			<summary>Gets a <see cref="T:System.Configuration.PropertyInformationCollection"></see> collection of the properties in the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object.</summary>
			<returns>A <see cref="T:System.Configuration.PropertyInformationCollection"></see> collection of the properties in the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ElementInformation.Source">
			<summary>Gets the source file where the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object originated.</summary>
			<returns>The source file where the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object originated.</returns>
		</member>
		<member name="P:System.Configuration.ElementInformation.Type">
			<summary>Gets the <see cref="T:System.Type"></see> of the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object.</summary>
			<returns>The <see cref="T:System.Type"></see> of the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ElementInformation.Validator">
			<summary>Gets the object used to validate the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object.</summary>
			<returns>The object used to validate the associated <see cref="T:System.Configuration.ConfigurationElement"></see> object.</returns>
		</member>
		<member name="T:System.Configuration.ExeConfigurationFileMap">
			<summary>Defines the configuration file mapping for an Exe.config file. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ExeConfigurationFileMap"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
			<summary>Creates a copy of the existing <see cref="T:System.Configuration.ExeConfigurationFileMap"></see> object.</summary>
			<returns>An <see cref="T:System.Configuration.ExeConfigurationFileMap"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
			<summary>Gets or sets the name of the configuration file.</summary>
			<returns>The configuration file name.</returns>
		</member>
		<member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
			<summary>Gets or sets the name of the configuration file for the local user.</summary>
			<returns>The configuration file name.</returns>
		</member>
		<member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
			<summary>Gets or sets the name of the configuration file for the roaming user.</summary>
			<returns>The configuration file name.</returns>
		</member>
		<member name="T:System.Configuration.ExeContext">
			<summary>Manages the path context for the current application. This class cannot be inherited.</summary>
		</member>
		<member name="P:System.Configuration.ExeContext.ExePath">
			<summary>Gets the current path for the application.</summary>
			<returns>A string value containing the current path.</returns>
		</member>
		<member name="P:System.Configuration.ExeContext.UserLevel">
			<summary>Gets an object representing the path level of the current application.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationUserLevel"></see> object representing the path level of the current application.</returns>
		</member>
		<member name="T:System.Configuration.GenericEnumConverter">
			<summary>Converts between a string and an enumeration type. </summary>
		</member>
		<member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.GenericEnumConverter"></see> class.</summary>
			<param name="typeEnum">The enumeration type to convert.</param>
		</member>
		<member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to an <see cref="T:System.Enum"></see> type.</summary>
			<returns>The <see cref="T:System.Enum"></see> type representing the data parameter.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts an <see cref="T:System.Enum"></see> type to a <see cref="T:System.String"></see> value.</summary>
			<returns>The <see cref="T:System.String"></see> representing the value parameter.</returns>
			<param name="type">The type to convert to.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="value">The value to convert to.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.IgnoreSection">
			<summary>Provides a wrapper type definition for configuration sections that are not handled by the <see cref="N:System.Configuration"></see> types.</summary>
		</member>
		<member name="M:System.Configuration.IgnoreSection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.IgnoreSection"></see> class.</summary>
		</member>
		<member name="T:System.Configuration.InfiniteIntConverter">
			<summary>Converts between a string and the standard infinite or integer value.</summary>
		</member>
		<member name="M:System.Configuration.InfiniteIntConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.InfiniteIntConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to an <see cref="T:System.Int32"></see>.</summary>
			<returns>The <see cref="F:System.Int32.MaxValue"></see>, if the data parameter is the <see cref="T:System.String"></see> "infinite"; otherwise, the <see cref="T:System.Int32"></see> representing the data parameter integer value.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts an <see cref="T:System.Int32"></see>.to a <see cref="T:System.String"></see>.</summary>
			<returns>The <see cref="T:System.String"></see> "infinite" if the value is <see cref="F:System.Int32.MaxValue"></see>; otherwise, the <see cref="T:System.String"></see> representing the value parameter.</returns>
			<param name="type">The type to convert to.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="value">The value to convert to.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.InfiniteTimeSpanConverter">
			<summary>Converts between a string and the standard infinite <see cref="T:System.TimeSpan"></see> value.</summary>
		</member>
		<member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.InfiniteTimeSpanConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to a <see cref="T:System.TimeSpan"></see>.</summary>
			<returns>The <see cref="F:System.TimeSpan.MaxValue"></see>, if the data parameter is the <see cref="T:System.String"></see> infinite; otherwise, the <see cref="T:System.TimeSpan"></see> representing the data parameter in minutes.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a <see cref="T:System.TimeSpan"></see> to a <see cref="T:System.String"></see>.</summary>
			<returns>The <see cref="T:System.String"></see> "infinite", if the value parameter is <see cref="F:System.TimeSpan.MaxValue"></see>; otherwise, the <see cref="T:System.String"></see> representing the value parameter in minutes.</returns>
			<param name="type">The conversion type.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> used during object conversion.</param>
			<param name="value">The value to convert.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.IntegerValidator">
			<summary>Provides validation of an <see cref="T:System.Int32"></see>.</summary>
		</member>
		<member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.IntegerValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">An <see cref="T:System.Int32"></see> specifying the minimum length of the integer value.</param>
			<param name="maxValue">An <see cref="T:System.Int32"></see> specifying the maximum length of the integer value.</param>
		</member>
		<member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.IntegerValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">An <see cref="T:System.Int32"></see> specifying the minimum length of the integer value.</param>
			<param name="rangeIsExclusive">A <see cref="T:System.Boolean"></see> value specifying whether the validation range is exclusive.</param>
			<param name="maxValue">An <see cref="T:System.Int32"></see> specifying the maximum length of the integer value.</param>
		</member>
		<member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.IntegerValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">An <see cref="T:System.Int32"></see> specifying the minimum length of the integer value.</param>
			<param name="rangeIsExclusive">A <see cref="T:System.Boolean"></see> value specifying whether the validation range is exclusive.</param>
			<param name="maxValue">An <see cref="T:System.Int32"></see> specifying the maximum length of the integer value.</param>
			<param name="resolution">An <see cref="T:System.Int32"></see> that specifies a value that must be matched.</param>
		</member>
		<member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
			<summary>Determines whether the type of the object can be validated.</summary>
			<returns>true if the type parameter matches an <see cref="T:System.Int32"></see>; otherwise, false. </returns>
			<param name="type">The type of object.</param>
		</member>
		<member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid.</summary>
			<param name="value">The value of an object.</param>
		</member>
		<member name="T:System.Configuration.IntegerValidatorAttribute">
			<summary>Declaratively instructs the .NET Framework to perform integer validation on a configuration property. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.IntegerValidatorAttribute"></see> class.</summary>
		</member>
		<member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
			<summary>Gets or sets a value indicating whether to include or exclude the integers in the range as defined by the <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue"></see> and <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue"></see> property values.</summary>
			<returns>true if the value must be excluded; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
			<summary>Gets or sets the maximum value allowed for the property.</summary>
			<returns>An integer indicating the allowed maximum value.</returns>
		</member>
		<member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
			<summary>Gets or sets the minimum value allowed for the property.</summary>
			<returns>An integer indicating the allowed minimum value.</returns>
		</member>
		<member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
			<summary>Gets an instance of the <see cref="T:System.Configuration.IntegerValidator"></see> class.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> validator instance.</returns>
		</member>
		<member name="T:System.Configuration.KeyValueConfigurationCollection">
			<summary>Contains a collection of <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> objects. </summary>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.KeyValueConfigurationCollection"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
			<summary>Adds a <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object to the collection based on the supplied parameters.</summary>
			<param name="keyValue">A <see cref="T:System.Configuration.KeyValueConfigurationElement"></see>.</param>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
			<summary>Adds a <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object to the collection based on the supplied parameters.</summary>
			<param name="value">A string specifying the value.</param>
			<param name="key">A string specifying the key.</param>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
			<summary>Clears the <see cref="T:System.Configuration.KeyValueConfigurationCollection"></see> collection.</summary>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
			<summary>When overridden in a derived class, the <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement"></see> method creates a new <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object.</summary>
			<returns>A new <see cref="T:System.Configuration.KeyValueConfigurationElement"></see>.</returns>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
			<summary>Gets the element key for a specified configuration element when overridden in a derived class.</summary>
			<returns>An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.KeyValueConfigurationElement"></see>.</returns>
			<param name="element">The <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> to which the key should be returned.</param>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
			<summary>Removes a <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object from the collection.</summary>
			<param name="key">A string specifying the key.</param>
		</member>
		<member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
			<summary>Gets the keys to all items contained in the <see cref="T:System.Configuration.KeyValueConfigurationCollection"></see> collection.</summary>
			<returns>A string array.</returns>
		</member>
		<member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
			<summary>Gets the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object based on the supplied parameter.</summary>
			<returns>A <see cref="T:System.Configuration.KeyValueConfigurationElement"></see>.</returns>
			<param name="key">The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> contained in the collection.</param>
		</member>
		<member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
			<summary>Gets a collection of configuration properties.</summary>
			<returns>A collection of configuration properties.</returns>
		</member>
		<member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
			<summary>Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object to the <see cref="T:System.Configuration.KeyValueConfigurationCollection"></see> collection will cause an exception to be thrown.</summary>
			<returns>true if an attempt to add a duplicate <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> to the <see cref="T:System.Configuration.KeyValueConfigurationCollection"></see> will cause an exception to be thrown; otherwise, false. </returns>
		</member>
		<member name="T:System.Configuration.KeyValueConfigurationElement">
			<summary>Represents a configuration element that contains a key/value pair. </summary>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> class based on the supplied parameters.</summary>
			<param name="value">The value of the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see>.</param>
			<param name="key">The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see>.</param>
		</member>
		<member name="M:System.Configuration.KeyValueConfigurationElement.Init">
			<summary>Sets the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object to its initial state.</summary>
		</member>
		<member name="P:System.Configuration.KeyValueConfigurationElement.Key">
			<summary>Gets the key of the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object.</summary>
			<returns>The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see>.</returns>
		</member>
		<member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
			<summary>Gets the collection of properties. </summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> of properties for the element.</returns>
		</member>
		<member name="P:System.Configuration.KeyValueConfigurationElement.Value">
			<summary>Gets or sets the value of the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see> object.</summary>
			<returns>The value of the <see cref="T:System.Configuration.KeyValueConfigurationElement"></see>.</returns>
		</member>
		<member name="T:System.Configuration.LongValidator">
			<summary>Provides validation of an <see cref="T:System.Int64"></see>.</summary>
		</member>
		<member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.LongValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">An <see cref="T:System.Int64"></see> specifying the minimum length of the long value.</param>
			<param name="maxValue">An <see cref="T:System.Int64"></see> specifying the maximum length of the long value.</param>
		</member>
		<member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.LongValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">An <see cref="T:System.Int64"></see> specifying the minimum length of the long value.</param>
			<param name="rangeIsExclusive">A <see cref="T:System.Boolean"></see> value specifying whether the validation range is exclusive.</param>
			<param name="maxValue">An <see cref="T:System.Int64"></see> specifying the maximum length of the long value.</param>
		</member>
		<member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.LongValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">An <see cref="T:System.Int64"></see> specifying the minimum length of the long value.</param>
			<param name="rangeIsExclusive">A <see cref="T:System.Boolean"></see> value specifying whether the validation range is exclusive.</param>
			<param name="maxValue">An <see cref="T:System.Int64"></see> specifying the maximum length of the long value.</param>
			<param name="resolution">An <see cref="T:System.Int64"></see> value that specifies a specific value that must be matched.</param>
		</member>
		<member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
			<summary>Determines whether the type of the object can be validated.</summary>
			<returns>true if the type parameter matches an <see cref="T:System.Int64"></see>; otherwise, false. </returns>
			<param name="type">The type of object.</param>
		</member>
		<member name="M:System.Configuration.LongValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid.</summary>
			<param name="value">The value of an object.</param>
		</member>
		<member name="T:System.Configuration.LongValidatorAttribute">
			<summary>Declaratively instructs the .NET Framework to perform long-integer validation on a configuration property. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.LongValidatorAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidatorAttribute"></see> class.</summary>
		</member>
		<member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
			<summary>Gets or sets a value indicating whether to include or exclude the integers in the range defined by the <see cref="P:System.Configuration.LongValidatorAttribute.MinValue"></see> and <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue"></see> property values.</summary>
			<returns>true if the value must be excluded; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
			<summary>Gets or sets the maximum value allowed for the property.</summary>
			<returns>A long integer indicating the allowed maximum value.</returns>
		</member>
		<member name="P:System.Configuration.LongValidatorAttribute.MinValue">
			<summary>Gets or sets the minimum value allowed for the property.</summary>
			<returns>An integer indicating the allowed minimum value.</returns>
		</member>
		<member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
			<summary>Gets an instance of the <see cref="T:System.Configuration.LongValidator"></see> class.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> validator instance.</returns>
		</member>
		<member name="T:System.Configuration.NameValueConfigurationCollection">
			<summary>Contains a collection of <see cref="T:System.Configuration.NameValueConfigurationElement"></see> objects. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueConfigurationCollection"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
			<summary>Adds a <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object to the collection.</summary>
			<param name="nameValue">A  <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</param>
		</member>
		<member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
			<summary>Clears the <see cref="T:System.Configuration.NameValueConfigurationCollection"></see>.</summary>
		</member>
		<member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
			<summary>Removes a <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object from the collection based on the provided parameter.</summary>
			<param name="nameValue">A <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</param>
		</member>
		<member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
			<summary>Removes a <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object from the collection based on the provided parameter.</summary>
			<param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</param>
		</member>
		<member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
			<summary>Gets the keys to all items contained in the <see cref="T:System.Configuration.NameValueConfigurationCollection"></see>.</summary>
			<returns>A string array.</returns>
		</member>
		<member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
			<summary>Gets or sets the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object based on the supplied parameter.</summary>
			<returns>A <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</returns>
			<param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> contained in the collection.</param>
		</member>
		<member name="T:System.Configuration.NameValueConfigurationElement">
			<summary>A configuration element that contains a <see cref="T:System.String"></see> name and <see cref="T:System.String"></see> value. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> class based on supplied parameters.</summary>
			<param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</param>
			<param name="value">The value of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</param>
		</member>
		<member name="P:System.Configuration.NameValueConfigurationElement.Name">
			<summary>Gets the name of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</summary>
			<returns>The name of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.NameValueConfigurationElement.Value">
			<summary>Gets or sets the value of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</summary>
			<returns>The value of the <see cref="T:System.Configuration.NameValueConfigurationElement"></see> object.</returns>
		</member>
		<member name="T:System.Configuration.PositiveTimeSpanValidator">
			<summary>Provides validation of a <see cref="T:System.TimeSpan"></see> object. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidator"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
			<summary>Determines whether the object type can be validated.</summary>
			<returns>true if the type parameter matches a <see cref="T:System.TimeSpan"></see> object; otherwise, false. </returns>
			<param name="type">The object type.</param>
		</member>
		<member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid.</summary>
			<param name="value">The value of an object.</param>
		</member>
		<member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
			<summary>Declaratively instructs the .NET Framework to perform time validation on a configuration property. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute"></see> class. </summary>
		</member>
		<member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
			<summary>Gets an instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidator"></see> class.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> validator instance. </returns>
		</member>
		<member name="T:System.Configuration.PropertyInformation">
			<summary>Contains meta-information on an individual property within the configuration. This type cannot be inherited.</summary>
		</member>
		<member name="P:System.Configuration.PropertyInformation.Converter">
			<summary>Gets the <see cref="T:System.ComponentModel.TypeConverter"></see> object related to the configuration attribute.</summary>
			<returns>A <see cref="T:System.ComponentModel.TypeConverter"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.DefaultValue">
			<summary>Gets an object containing the default value related to a configuration attribute.</summary>
			<returns>An object containing the default value of the configuration attribute.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.Description">
			<summary>Gets the description of the object that corresponds to a configuration attribute.</summary>
			<returns>The description of the configuration attribute.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.IsKey">
			<summary>Gets a value specifying whether the configuration attribute is a key.</summary>
			<returns>true if the configuration attribute is a key; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.IsLocked">
			<summary>Gets a value specifying whether the configuration attribute is locked.</summary>
			<returns>true if the <see cref="T:System.Configuration.PropertyInformation"></see> object is locked; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.IsModified">
			<summary>Gets a value specifying whether the configuration attribute has been modified.</summary>
			<returns>true if the <see cref="T:System.Configuration.PropertyInformation"></see> object has been modified; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.IsRequired">
			<summary>Gets a value specifying whether the configuration attribute is required.</summary>
			<returns>true if the <see cref="T:System.Configuration.PropertyInformation"></see> object is required; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.LineNumber">
			<summary>Gets the line number in the configuration file related to the configuration attribute.</summary>
			<returns>A line number of the configuration file.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.Name">
			<summary>Gets the name of the object that corresponds to a configuration attribute.</summary>
			<returns>The name of the <see cref="T:System.Configuration.PropertyInformation"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.Source">
			<summary>Gets the source file that corresponds to a configuration attribute.</summary>
			<returns>The source file of the <see cref="T:System.Configuration.PropertyInformation"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.Type">
			<summary>Gets the <see cref="T:System.Type"></see> of the object that corresponds to a configuration attribute.</summary>
			<returns>The <see cref="T:System.Type"></see> of the <see cref="T:System.Configuration.PropertyInformation"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.Validator">
			<summary>Gets a <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> object related to the configuration attribute.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.Value">
			<summary>Gets or sets an object containing the value related to a configuration attribute.</summary>
			<returns>An object containing the value for the <see cref="T:System.Configuration.PropertyInformation"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.PropertyInformation.ValueOrigin">
			<summary>Gets a <see cref="T:System.Configuration.PropertyValueOrigin"></see> object related to the configuration attribute. </summary>
			<returns>A <see cref="T:System.Configuration.PropertyValueOrigin"></see> object.</returns>
		</member>
		<member name="T:System.Configuration.PropertyInformationCollection">
			<summary>Contains a collection of <see cref="T:System.Configuration.PropertyInformation"></see> objects. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
			<summary>Copies the entire <see cref="T:System.Configuration.PropertyInformationCollection"></see> collection to a compatible one-dimensional <see cref="T:System.Array"></see>, starting at the specified index of the target array.</summary>
			<param name="array">A one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from the <see cref="T:System.Configuration.PropertyInformationCollection"></see> collection. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
			<param name="index">The zero-based index in array at which copying begins.</param>
		</member>
		<member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
			<summary>Gets an <see cref="T:System.Collections.IEnumerator"></see> object, which is used to iterate through this <see cref="T:System.Configuration.PropertyInformationCollection"></see> collection.</summary>
			<returns>An IEnumerator object, which is used to iterate through this <see cref="T:System.Configuration.PropertyInformationCollection"></see>.</returns>
		</member>
		<member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object with the data needed to serialize the <see cref="T:System.Configuration.PropertyInformationCollection"></see> instance.</summary>
			<param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Configuration.PropertyInformationCollection"></see> instance.</param>
			<param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that contains the information required to serialize the <see cref="T:System.Configuration.PropertyInformationCollection"></see> instance.</param>
			<exception cref="T:System.ArgumentNullException">info is null.</exception>
		</member>
		<member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
			<summary>Gets the <see cref="T:System.Configuration.PropertyInformation"></see> object in the collection, based on the specified property name.</summary>
			<returns>A <see cref="T:System.Configuration.PropertyInformation"></see> object.</returns>
			<param name="propertyName">The name of the configuration attribute contained in the <see cref="T:System.Configuration.PropertyInformationCollection"></see>object.</param>
		</member>
		<member name="T:System.Configuration.PropertyValueOrigin">
			<summary>Specifies the level in the configuration hierarchy where a configuration property value originated.</summary>
		</member>
		<member name="F:System.Configuration.PropertyValueOrigin.Default">
			<summary>The configuration property value originates from the <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue"></see> property.</summary>
		</member>
		<member name="F:System.Configuration.PropertyValueOrigin.Inherited">
			<summary>The configuration property value is inherited from a parent level in the configuration.</summary>
		</member>
		<member name="F:System.Configuration.PropertyValueOrigin.SetHere">
			<summary>The configuration property value is defined at the current level of the hierarchy.</summary>
		</member>
		<member name="T:System.Configuration.ProtectedConfiguration">
			<summary>Provides access to the protected-configuration providers for the current application's configuration file. </summary>
		</member>
		<member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
			<summary>The name of the data protection provider.</summary>
		</member>
		<member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
			<summary>The name of the protected data section.</summary>
		</member>
		<member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
			<summary>The name of the RSA provider.</summary>
		</member>
		<member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
			<summary>Gets the name of the default protected-configuration provider.</summary>
			<returns>The name of the default protected-configuration provider.</returns>
		</member>
		<member name="P:System.Configuration.ProtectedConfiguration.Providers">
			<summary>Gets a collection of the installed protected-configuration providers.</summary>
			<returns>A <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection"></see> collection of installed <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> objects.</returns>
		</member>
		<member name="T:System.Configuration.ProtectedConfigurationProvider">
			<summary>Is the base class to create providers for encrypting and decrypting protected-configuration data.</summary>
		</member>
		<member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> class using default settings.</summary>
		</member>
		<member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
			<summary>Decrypts the passed <see cref="T:System.Xml.XmlNode"></see> object from a configuration file.</summary>
			<returns>The <see cref="T:System.Xml.XmlNode"></see> object containing decrypted data.</returns>
			<param name="encryptedNode">The <see cref="T:System.Xml.XmlNode"></see> object to decrypt.</param>
		</member>
		<member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
			<summary>Encrypts the passed <see cref="T:System.Xml.XmlNode"></see> object from a configuration file.</summary>
			<returns>The <see cref="T:System.Xml.XmlNode"></see> object containing encrypted data.</returns>
			<param name="node">The <see cref="T:System.Xml.XmlNode"></see> object to encrypt.</param>
		</member>
		<member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
			<summary>Provides a collection of <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> objects.</summary>
		</member>
		<member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection"></see> class using default settings.</summary>
		</member>
		<member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
			<summary>Adds a <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object to the collection.</summary>
			<param name="provider">A <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object to add to the collection.</param>
			<exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object to add already exists in the collection.- or -The collection is read-only.</exception>
		</member>
		<member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
			<summary>Gets a <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object in the collection with the passed name.</summary>
			<returns><see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object with the specified name, or null if there is no object with that name.</returns>
			<param name="name">The name of a <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object in the collection.</param>
		</member>
		<member name="T:System.Configuration.ProtectedConfigurationSection">
			<summary>Provides programmatic access to the configProtectedData configuration section. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationSection"></see> class using default settings.</summary>
		</member>
		<member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
			<summary>Gets the name of the default <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object in the <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers"></see> collection property.</summary>
			<returns>The name of the default <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> object in the <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers"></see> collection property. </returns>
		</member>
		<member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
			<summary>Gets a <see cref="T:System.Configuration.ProviderSettingsCollection"></see> collection of all the <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> objects in all participating configuration files.</summary>
			<returns>A <see cref="T:System.Configuration.ProviderSettingsCollection"></see> collection of all the <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> objects in all participating configuration files. </returns>
		</member>
		<member name="T:System.Configuration.ProtectedProviderSettings">
			<summary>Represents a group of configuration elements that configure the providers for the &lt;protectedData&gt; configuration section.</summary>
		</member>
		<member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedProviderSettings"></see> class. </summary>
		</member>
		<member name="P:System.Configuration.ProtectedProviderSettings.Properties">
			<summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> collection that represents the properties of the providers for the protected configuration data.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> that represents the properties of the providers for the protected configuration data.</returns>
		</member>
		<member name="P:System.Configuration.ProtectedProviderSettings.Providers">
			<summary>Gets a collection of <see cref="T:System.Configuration.ProviderSettings"></see> objects that represent the properties of the providers for the protected configuration data.</summary>
			<returns>A collection of <see cref="T:System.Configuration.ProviderSettings"></see> objects that represent the properties of the providers for the protected configuration data.</returns>
		</member>
		<member name="T:System.Configuration.ProviderSettings">
			<summary>Represents a group of configuration elements that configure a provider.</summary>
		</member>
		<member name="M:System.Configuration.ProviderSettings.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ProviderSettings"></see> class. </summary>
		</member>
		<member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.ProviderSettings"></see> class. </summary>
			<param name="type">The type of the provider to configure settings for.</param>
			<param name="name">The name of the provider to configure settings for.</param>
		</member>
		<member name="P:System.Configuration.ProviderSettings.Name">
			<summary>Gets or sets the name of the provider configured by this class.</summary>
			<returns>The name of the provider.</returns>
		</member>
		<member name="P:System.Configuration.ProviderSettings.Parameters">
			<summary>Gets a collection of user-defined parameters for the provider.</summary>
			<returns>A <see cref="T:System.Collections.Specialized.NameValueCollection"></see> of parameters for the provider.</returns>
		</member>
		<member name="P:System.Configuration.ProviderSettings.Type">
			<summary>Gets or sets the type of the provider configured by this class.</summary>
			<returns>The fully qualified namespace and class name for the type of provider configured by this <see cref="T:System.Configuration.ProviderSettings"></see> instance.</returns>
		</member>
		<member name="T:System.Configuration.ProviderSettingsCollection">
			<summary>Represents a collection of <see cref="T:System.Configuration.ProviderSettings"></see> objects.</summary>
		</member>
		<member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.ProviderSettingsCollection"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
			<summary>Adds a <see cref="T:System.Configuration.ProviderSettings"></see> object to the collection.</summary>
			<param name="provider">The <see cref="T:System.Configuration.ProviderSettings"></see> object to add.</param>
		</member>
		<member name="M:System.Configuration.ProviderSettingsCollection.Clear">
			<summary>Clears the collection.</summary>
		</member>
		<member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
			<summary>Removes an element from the collection.</summary>
			<param name="name">The name of the <see cref="T:System.Configuration.ProviderSettings"></see> object to remove.</param>
		</member>
		<member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
			<summary>Indexer to an instance of the <see cref="T:System.Configuration.ProviderSettingsCollection"></see> class.</summary>
			<returns>The specified <see cref="T:System.Configuration.ProviderSettings"></see>.</returns>
			<param name="index">The index of the <see cref="T:System.Configuration.ProviderSettings"></see> to return.</param>
		</member>
		<member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
			<summary>Gets an item from the collection. </summary>
			<returns>A <see cref="T:System.Configuration.ProviderSettings"></see> object contained in the collection.</returns>
			<param name="key">A string reference to the <see cref="T:System.Configuration.ProviderSettings"></see> object within the collection.</param>
		</member>
		<member name="T:System.Configuration.RegexStringValidator">
			<summary>Provides validation of a string based on the rules provided by a regular expression.</summary>
		</member>
		<member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.RegexStringValidator"></see> class.</summary>
			<param name="regex">A string specifying a regular expression.</param>
		</member>
		<member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
			<summary>Determines whether the type of the object can be validated.</summary>
			<returns>true if the type parameter matches a string; otherwise, false. </returns>
			<param name="type">The type of object.</param>
		</member>
		<member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid.</summary>
			<param name="value">The value of an object.</param>
		</member>
		<member name="T:System.Configuration.RegexStringValidatorAttribute">
			<summary>Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.RegexStringValidatorAttribute"></see> object.</summary>
			<param name="regex">The string to use for regular expression validation.</param>
		</member>
		<member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
			<summary>Gets the string used to perform regular-expression validation.</summary>
			<returns>The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.</returns>
		</member>
		<member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
			<summary>Gets an instance of the <see cref="T:System.Configuration.RegexStringValidator"></see> class.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> validator instance.</returns>
		</member>
		<member name="T:System.Configuration.RsaProtectedConfigurationProvider">
			<summary>Provides a <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> that uses RSA encryption to encrypt and decrypt configuration data.</summary>
		</member>
		<member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.RSAProtectedConfigurationProvider"></see> class using default settings.</summary>
		</member>
		<member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
			<summary>Adds a key to the RSA key container.</summary>
			<param name="exportable">true to indicate that the key is exportable; otherwise, false.</param>
			<param name="keySize">The size of the key to add.</param>
		</member>
		<member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
			<summary>Decrypts the XML node passed to it.</summary>
			<param name="encryptedNode">The <see cref="T:System.Xml.XmlNode"></see> to decrypt.</param>
		</member>
		<member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
			<summary>Removes a key from the RSA key container.</summary>
		</member>
		<member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
			<summary>Encrypts the XML node passed to it.</summary>
			<returns>An encrypted <see cref="T:System.Xml.XmlNode"></see> object.</returns>
			<param name="Node">The <see cref="T:System.Xml.XmlNode"></see> to encrypt.</param>
		</member>
		<member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
			<summary>Exports an RSA key from the key container.</summary>
			<param name="xmlFileName">The file name and path to export the key to.</param>
			<param name="includePrivateParameters">true to indicate that private parameters are exported; otherwise, false.</param>
			<exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
			<exception cref="T:System.ArgumentNullException">path is null. </exception>
			<exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
			<exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
			<exception cref="T:System.IO.IOException">An error occurred while opening the file. </exception>
			<exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
			<exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
			<exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
			<exception cref="T:System.IO.FileNotFoundException">The file specified in path was not found. </exception>
		</member>
		<member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
			<summary>Imports an RSA key into the key container.</summary>
			<param name="xmlFileName">The file name and path to import the key from.</param>
			<param name="exportable">true to indicate that the key is exportable; otherwise, false.</param>
			<exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
			<exception cref="T:System.IO.FileNotFoundException">The file specified in path was not found. </exception>
			<exception cref="T:System.UnauthorizedAccessException">path specified a file that is write-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
			<exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
			<exception cref="T:System.IO.IOException">An error occurred while opening the file. </exception>
			<exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
			<exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
			<exception cref="T:System.ArgumentNullException">path is null.</exception>
		</member>
		<member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
			<summary>Initializes the provider with default settings.</summary>
			<param name="configurationValues">A <see cref="T:System.Collections.Specialized.NameValueCollection"></see> collection of values to use when initializing the object.</param>
			<param name="name">The provider name to use for the object.</param>
		</member>
		<member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
			<summary>Gets the name of the Windows cryptography API (crypto API) cryptographic service provider (CSP).</summary>
			<returns>The name of the CryptoAPI cryptographic service provider.</returns>
		</member>
		<member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
			<summary>Gets the name of the key container.</summary>
			<returns>The name of the key container.</returns>
		</member>
		<member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
			<summary>Gets the public key used by the provider.</summary>
			<returns>An <see cref="T:System.Security.Cryptography.RSAParameters"></see> object that contains the public key used by the provider.</returns>
		</member>
		<member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
			<summary>Gets a Boolean value indicating whether the <see cref="T:System.Configuration.RSAProtectedConfigurationProvider"></see> is using the machine key container.</summary>
			<returns>true if the <see cref="T:System.Configuration.RSAProtectedConfigurationProvider"></see> is using the machine key container; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
			<summary>Gets a value indicating whether the provider is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data.</summary>
			<returns>true if the <see cref="T:System.Configuration.RSAProtectedConfigurationProvider"></see> is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data; otherwise, false.</returns>
		</member>
		<member name="T:System.Configuration.SectionInformation">
			<summary>Contains meta-information on an individual section within the configuration. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.SectionInformation.ForceDeclaration">
			<summary>Forces the associated configuration section to appear in the configuration file.</summary>
		</member>
		<member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
			<summary>Forces the associated configuration section to appear in the configuration file or removes an already-declared section from the configuration file.</summary>
			<param name="force">true if the associated section is to be declared in the configuration file; otherwise, false.</param>
		</member>
		<member name="M:System.Configuration.SectionInformation.GetParentSection">
			<summary>Gets the configuration section that contains the configuration section associated with this object.</summary>
			<returns>The configuration section that contains the <see cref="T:System.Configuration.ConfigurationSection"></see> associated with this <see cref="T:System.Configuration.SectionInformation"></see> object.</returns>
		</member>
		<member name="M:System.Configuration.SectionInformation.GetRawXml">
			<summary>Returns an XML node object representing the associated configuration-section object.</summary>
			<returns>An <see cref="T:System.Xml.XmlNode"></see> containing the XML representation for this <see cref="T:System.Configuration.ConfigurationSection"></see> section.</returns>
			<exception cref="T:System.InvalidOperationException">This <see cref="T:System.Configuration.ConfigurationSection"></see> is locked and cannot be edited.</exception>
		</member>
		<member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
			<summary>Marks a configuration section for protection. </summary>
			<param name="protectionProvider">The name of the protection provider to use.</param>
		</member>
		<member name="M:System.Configuration.SectionInformation.RevertToParent">
			<summary>Causes the associated configuration section to inherit all its values from its parent section.</summary>
			<exception cref="T:System.InvalidOperationException">This method cannot be called when not in editing mode.</exception>
		</member>
		<member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
			<summary>Sets the object to an XML representation of the associated configuration section within the configuration file.</summary>
			<param name="rawXml">The XML to use.</param>
			<exception cref="T:System.ArgumentException">rawXml is null.</exception>
		</member>
		<member name="M:System.Configuration.SectionInformation.UnprotectSection">
			<summary>Removes the protected configuration encryption from the associated configuration section.</summary>
		</member>
		<member name="P:System.Configuration.SectionInformation.AllowDefinition">
			<summary>Gets or sets a value indicating where in the configuration file hierarchy the associated configuration section can be defined. </summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationAllowDefinition"></see> value indicating where in the configuration file hierarchy the associated <see cref="T:System.Configuration.ConfigurationSection"></see> object may be declared.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
			<summary>Gets or sets a value indicating where in the configuration file hierarchy the associated configuration section may be declared.</summary>
			<returns>A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition"></see> value indicating where in the configuration file hierarchy the associated <see cref="T:System.Configuration.ConfigurationSection"></see> object may be declared for .exe files.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.AllowLocation">
			<summary>Gets or sets a value indicating whether the configuration section allows the location attribute.</summary>
			<returns>true if the location attribute is allowed; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.AllowOverride">
			<summary>Gets or sets a value indicating whether the associated configuration section can be overridden by lower-level configuration files.</summary>
			<returns>true if the section can be overridden; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.ConfigSource">
			<summary>Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.</summary>
			<returns>The name of the include file in which the associated <see cref="T:System.Configuration.ConfigurationSection"></see> is defined, if such a file exists; otherwise, an empty string.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.ForceSave">
			<summary>Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.</summary>
			<returns>true if the associated <see cref="T:System.Configuration.ConfigurationSection"></see> object will be saved even if it has not been modified; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
			<summary>Gets or sets a value indicating whether the settings specified in the associated configuration section are inherited by applications that reside in a subdirectory of the application to which the associated configuration section applies.</summary>
			<returns>true if the settings specified in this <see cref="T:System.Configuration.ConfigurationSection"></see> object are inherited by child applications; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
			<summary>Gets a value indicating whether the associated configuration section must be declared in the configuration file.</summary>
			<returns>true if the associated <see cref="T:System.Configuration.ConfigurationSection"></see> object must be declared in the configuration file; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.IsDeclared">
			<summary>Gets a value indicating whether the associated configuration section is declared in the configuration file.</summary>
			<returns>true if this <see cref="T:System.Configuration.ConfigurationSection"></see> is declared in the configuration file; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.IsLocked">
			<summary>Gets a value indicating whether the associated configuration section is locked.</summary>
			<returns>true if the section is locked; otherwise, false.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.IsProtected">
			<summary>Gets a value indicating whether the associated configuration section is protected.</summary>
			<returns>true if this <see cref="T:System.Configuration.ConfigurationSection"></see> is protected; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.Name">
			<summary>Gets the name of the associated configuration section.</summary>
			<returns>The complete name of the <see cref="T:System.Configuration.ConfigurationSection"></see>.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.ProtectionProvider">
			<summary>Gets the protected configuration provider for the associated configuration section.</summary>
			<returns>The <see cref="T:System.Configuration.ProtectedConfigurationProvider"></see> for this <see cref="T:System.Configuration.ConfigurationSection"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.RequirePermission">
			<summary>Gets a value indicating whether the associated configuration section requires access permissions.</summary>
			<returns>true if the requirePermission attribute is set to true; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
			<summary>Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.</summary>
			<returns>true if a change in an external configuration include file requires an application restart; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.SectionName">
			<summary>Gets the name of the associated configuration section.</summary>
			<returns>The name of the associated <see cref="T:System.Configuration.ConfigurationSection"></see> object.</returns>
		</member>
		<member name="P:System.Configuration.SectionInformation.Type">
			<summary>Gets or sets the section class name.</summary>
			<returns>The name of the class associated with this <see cref="T:System.Configuration.ConfigurationSection"></see> section.</returns>
		</member>
		<member name="T:System.Configuration.StringValidator">
			<summary>Provides validation of a string.</summary>
		</member>
		<member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.StringValidator"></see> class based on a supplied parameter.</summary>
			<param name="minLength">An integer specifying the minimum length of the string value.</param>
		</member>
		<member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.StringValidator"></see> class based on supplied parameters.</summary>
			<param name="minLength">An integer specifying the minimum length of the string value.</param>
			<param name="maxLength">An integer specifying the maximum length of the string value.</param>
		</member>
		<member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.StringValidator"></see> class based on supplied parameters.</summary>
			<param name="minLength">An integer specifying the minimum length of the string value.</param>
			<param name="invalidCharacters">A string representing invalid characters. </param>
			<param name="maxLength">An integer specifying the maximum length of the string value.</param>
		</member>
		<member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
			<summary>Determines whether an object can be validated based on type.</summary>
			<returns>true if the type parameter matches a string; otherwise, false. </returns>
			<param name="type">The object type.</param>
		</member>
		<member name="M:System.Configuration.StringValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid. </summary>
			<param name="value">The object value.</param>
		</member>
		<member name="T:System.Configuration.StringValidatorAttribute">
			<summary>Declaratively instructs the .NET Framework to perform string validation on a configuration property. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.StringValidatorAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidatorAttribute"></see> class.</summary>
		</member>
		<member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
			<summary>Gets or sets the invalid characters for the property.</summary>
			<returns>The string containing the set of characters that are not allowed for the property.</returns>
		</member>
		<member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
			<summary>Gets or sets the maximum length allowed for the string to assign to the property.</summary>
			<returns>An integer indicating the maximum allowed length for the string to assign to the property.</returns>
		</member>
		<member name="P:System.Configuration.StringValidatorAttribute.MinLength">
			<summary>Gets or sets the minimum allowed value for the string to assign to the property.</summary>
			<returns>An integer indicating the allowed minimum length for the string to assign to the property.</returns>
		</member>
		<member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
			<summary>Gets an instance of the <see cref="T:System.Configuration.StringValidator"></see>.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> validator instance.</returns>
		</member>
		<member name="T:System.Configuration.SubclassTypeValidator">
			<summary>Validates that an object is a derived class of a specified type.</summary>
		</member>
		<member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.SubclassTypeValidator"></see> class based on the supplied parameters.</summary>
			<param name="baseClass">The base class to validate against.</param>
		</member>
		<member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
			<summary>Determines whether an object can be validated based on type.</summary>
			<returns>true if the type parameter matches a type that can be validated; otherwise, false. </returns>
			<param name="type">The object type.</param>
		</member>
		<member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid. </summary>
			<param name="value">The object value.</param>
		</member>
		<member name="T:System.Configuration.SubclassTypeValidatorAttribute">
			<summary>Declaratively instructs the .NET Framework to perform validation on a configuration property. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.SubclassTypeValidatorAttribute"></see> class. </summary>
			<param name="baseClass">The base class type.</param>
		</member>
		<member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
			<summary>Gets the base type of the object being validated.</summary>
			<returns>The base type of the object being validated.</returns>
		</member>
		<member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
			<summary>Gets the validator attribute instance.</summary>
			<returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> instance.</returns>
		</member>
		<member name="T:System.Configuration.TimeSpanMinutesConverter">
			<summary>Converts a time span expressed in minutes. </summary>
		</member>
		<member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanMinutesConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to a <see cref="T:System.TimeSpan"></see>.</summary>
			<returns>The <see cref="T:System.TimeSpan"></see> representing the data parameter in minutes.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a <see cref="T:System.TimeSpan"></see> to a <see cref="T:System.String"></see>. </summary>
			<returns>The <see cref="T:System.String"></see> representing the value parameter in minutes.</returns>
			<param name="type">The type to convert to.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="value">The value to convert to.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
			<summary>Converts a <see cref="T:System.TimeSpan"></see> expressed in minutes or as a standard infinite time span.</summary>
		</member>
		<member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to a <see cref="T:System.TimeSpan"></see>.</summary>
			<returns>The <see cref="F:System.TimeSpan.MaxValue"></see>, if the data parameter is the <see cref="T:System.String"></see> "infinite"; otherwise, the <see cref="T:System.TimeSpan"></see> representing the data parameter in minutes.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a <see cref="T:System.TimeSpan"></see> to a <see cref="T:System.String"></see>.</summary>
			<returns>The <see cref="T:System.String"></see> "infinite", if the value parameter is <see cref="F:System.TimeSpan.MaxValue"></see>; otherwise, the <see cref="T:System.String"></see> representing the value parameter in minutes.</returns>
			<param name="type">The conversion type.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="value">The value to convert.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.TimeSpanSecondsConverter">
			<summary>Converts a time span expressed in seconds. </summary>
		</member>
		<member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanSecondsConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to a <see cref="T:System.TimeSpan"></see>.</summary>
			<returns>The <see cref="T:System.TimeSpan"></see> representing the data parameter in seconds.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a <see cref="T:System.TimeSpan"></see> to a <see cref="T:System.String"></see>.</summary>
			<returns>The <see cref="T:System.String"></see> representing the value parameter in minutes.</returns>
			<param name="type">The type to convert to.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="value">The value to convert to.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
			<summary>Converts a <see cref="T:System.TimeSpan"></see> expressed in seconds or as a standard infinite time span.</summary>
		</member>
		<member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to a <see cref="T:System.TimeSpan"></see>.</summary>
			<returns>The <see cref="F:System.TimeSpan.MaxValue"></see>, if the data parameter is the <see cref="T:System.String"></see> "infinite"; otherwise, the <see cref="T:System.TimeSpan"></see> representing the data parameter in seconds.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a <see cref="T:System.TimeSpan"></see> to a. <see cref="T:System.String"></see>.</summary>
			<returns>The <see cref="T:System.String"></see> "infinite", if the value parameter is <see cref="F:System.TimeSpan.MaxValue"></see>; otherwise, the <see cref="T:System.String"></see> representing the value parameter in seconds.</returns>
			<param name="type">The conversion type.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="value">The value to convert.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.TimeSpanValidator">
			<summary>Provides validation of a <see cref="T:System.TimeSpan"></see>.</summary>
		</member>
		<member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.TimeSpanValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">A <see cref="T:System.TimeSpan"></see> object specifying the minimum time allowed to pass validation.</param>
			<param name="maxValue">A <see cref="T:System.TimeSpan"></see> object specifying the maximum time allowed to pass validation.</param>
		</member>
		<member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.TimeSpanValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">A <see cref="T:System.TimeSpan"></see> object specifying the minimum time allowed to pass validation.</param>
			<param name="rangeIsExclusive">A <see cref="T:System.Boolean"></see> value specifying whether the validation range is exclusive.</param>
			<param name="maxValue">A <see cref="T:System.TimeSpan"></see> object specifying the maximum time allowed to pass validation.</param>
		</member>
		<member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
			<summary>Initializes an instance of the <see cref="T:System.Configuration.TimeSpanValidator"></see> class based on supplied parameters.</summary>
			<param name="minValue">A <see cref="T:System.TimeSpan"></see> object specifying the minimum time allowed to pass validation.</param>
			<param name="rangeIsExclusive">A <see cref="T:System.Boolean"></see> value specifying whether the validation range is exclusive.</param>
			<param name="maxValue">A <see cref="T:System.TimeSpan"></see> object specifying the maximum time allowed to pass validation.</param>
			<param name="resolutionInSeconds">An <see cref="T:System.Int64"></see> value that specifies a number of seconds. </param>
		</member>
		<member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
			<summary>Determines whether the type of the object can be validated.</summary>
			<returns>true if the type parameter matches a <see cref="T:System.TimeSpan"></see> value; otherwise, false. </returns>
			<param name="type">The type of object.</param>
		</member>
		<member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
			<summary>Determines whether the value of an object is valid.</summary>
			<param name="value">The value of an object.</param>
		</member>
		<member name="T:System.Configuration.TimeSpanValidatorAttribute">
			<summary>Declaratively instructs the .NET Framework to perform time validation on a configuration property. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidatorAttribute"></see> class.</summary>
		</member>
		<member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
			<summary>Gets the absolute maximum value allowed.</summary>
		</member>
		<member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
			<summary>Gets the absolute minimum value allowed.</summary>
		</member>
		<member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
			<summary>Gets or sets a value indicating whether to include or exclude the integers in the range as defined by <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString"></see> and <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString"></see>.</summary>
			<returns>true if the value must be excluded; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
			<summary>The absolute maximum allowed value.</summary>
			<returns>The allowed maximum <see cref="T:System.TimeSpan"></see> value. </returns>
		</member>
		<member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
			<summary>The relative maximum allowed value.</summary>
			<returns>The allowed maximum <see cref="T:System.TimeSpan"></see> value. </returns>
		</member>
		<member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
			<summary>The absolute minimum allowed value.</summary>
			<returns>The allowed minimum <see cref="T:System.TimeSpan"></see> value. </returns>
		</member>
		<member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
			<summary>The relative minimum allowed value.</summary>
			<returns>The allowed minimum <see cref="T:System.TimeSpan"></see> value. </returns>
		</member>
		<member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
			<summary>Gets an instance of the <see cref="T:System.Configuration.TimeSpanValidator"></see>.</summary>
			<returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase"></see> validator instance. </returns>
		</member>
		<member name="T:System.Configuration.TypeNameConverter">
			<summary>Converts between type and string value. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Configuration.TypeNameConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.TypeNameConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to a <see cref="T:System.Type"></see>.</summary>
			<returns>The <see cref="T:System.Type"></see> representing the data parameter.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a <see cref="T:System.Type"></see> to a <see cref="T:System.String"></see>.</summary>
			<returns>The <see cref="T:System.String"></see> representing the value parameter. </returns>
			<param name="type">The type to convert to.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="value">The value to convert to.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="T:System.Configuration.ValidatorCallback">
			<summary>Represents a method to be called after the validation of an object.</summary>
		</member>
		<member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
			<summary>Converts a string to its canonical format. </summary>
		</member>
		<member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a <see cref="T:System.String"></see> to canonical form.</summary>
			<returns>An object representing the converted value.</returns>
			<param name="data">The <see cref="T:System.String"></see> object to convert.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a <see cref="T:System.String"></see> to canonical form.</summary>
			<returns>An object representing the converted value.</returns>
			<param name="type">The type to convert to.</param>
			<param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object used during conversion.</param>
			<param name="value">The value to convert to.</param>
			<param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
		</member>
		<member name="N:System.Configuration.Internal">
			<summary>The <see cref="N:System.Configuration.Internal"></see> namespace contains configuration types intended for internal use only. </summary>
		</member>
		<member name="T:System.Configuration.Internal.DelegatingConfigHost">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
			<summary>This member is for internal use only.</summary>
			<returns>A Type value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A Stream value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
			<summary>This member is for internal use only.</summary>
			<returns>A Stream value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
			<summary>This member is for internal use only.</summary>
			<returns>A IInternalConfigHost type</returns>
		</member>
		<member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="T:System.Configuration.Internal.IConfigSystem">
			<summary>This type is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
			<summary>This type is for internal use only.</summary>
		</member>
		<member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="T:System.Configuration.Internal.IInternalConfigClientHost">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="T:System.Configuration.Internal.IInternalConfigHost">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
			<summary>This member is for internal use only.</summary>
			<returns>A type value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
			<summary>This member is for internal use only.</summary>
			<returns>A IDisposable value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A Stream value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
			<summary>This member is for internal use only.</summary>
			<returns>A Stream value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="T:System.Configuration.Internal.IInternalConfigRecord">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="T:System.Configuration.Internal.IInternalConfigRoot">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An IInternalConfigRecord value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An object value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>A string value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
			<summary>This member is for internal use only.</summary>
			<returns>An IInternalConfigRecord value.</returns>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
			<summary>This member is for internal use only.</summary>
			<returns>A boolean value.</returns>
		</member>
		<member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
			<summary>This type is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
			<summary>This member is for internal use only.</summary>
		</member>
		<member name="N:System.Configuration.Provider">
			<summary>The <see cref="N:System.Configuration.Provider"></see> namespace contains the base classes shared by both server and client applications to support a pluggable model to easily add or remove functionality.</summary>
		</member>
		<member name="T:System.Configuration.Provider.ProviderBase">
			<summary>Provides a base implementation for the extensible provider model.</summary>
		</member>
		<member name="M:System.Configuration.Provider.ProviderBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderBase"></see> class. </summary>
		</member>
		<member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
			<summary>Initializes the provider.</summary>
			<param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
			<param name="name">The friendly name of the provider.</param>
			<exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
			<exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
			<exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
		</member>
		<member name="P:System.Configuration.Provider.ProviderBase.Description">
			<summary>Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).</summary>
			<returns>A brief, friendly description suitable for display in administrative tools or other UIs.</returns>
		</member>
		<member name="P:System.Configuration.Provider.ProviderBase.Name">
			<summary>Gets the friendly name used to refer to the provider during configuration.</summary>
			<returns>The friendly name used to refer to the provider during configuration.</returns>
		</member>
		<member name="T:System.Configuration.Provider.ProviderCollection">
			<summary>Represents a collection of provider objects that inherit from <see cref="T:System.Configuration.Provider.ProviderBase"></see>.</summary>
		</member>
		<member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderCollection"></see> class. </summary>
		</member>
		<member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
			<summary>Adds a provider to the collection.</summary>
			<param name="provider">The provider to be added.</param>
			<exception cref="T:System.ArgumentException">The <see cref="P:System.Configuration.Provider.ProviderBase.Name"></see> of provider is null.- or -The length of the <see cref="P:System.Configuration.Provider.ProviderBase.Name"></see> of provider is less than 1.</exception>
			<exception cref="T:System.ArgumentNullException">provider is null.</exception>
			<exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
			<PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
		</member>
		<member name="M:System.Configuration.Provider.ProviderCollection.Clear">
			<summary>Removes all items from the collection.</summary>
			<exception cref="T:System.NotSupportedException">The collection is set to read-only.</exception>
		</member>
		<member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
			<summary>Copies the contents of the collection to the given array starting at the specified index.</summary>
			<param name="array">The array to copy the elements of the collection to.</param>
			<param name="index">The index of the collection item at which to start the copying process.</param>
		</member>
		<member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
			<summary>Returns an object that implements the <see cref="T:System.Collections.IEnumerator"></see> interface to iterate through the collection.</summary>
			<returns>An object that implements <see cref="T:System.Collections.IEnumerator"></see> to iterate through the collection.</returns>
		</member>
		<member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
			<summary>Removes a provider from the collection.</summary>
			<param name="name">The name of the provider to be removed.</param>
			<exception cref="T:System.NotSupportedException">The collection has been set to read-only.</exception>
		</member>
		<member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
			<summary>Sets the collection to be read-only.</summary>
		</member>
		<member name="M:System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
			<summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo"></see>.</summary>
			<param name="array">The array to copy the elements of the collection to.</param>
			<param name="index">The index of the array at which to start copying provider instances from the collection.</param>
		</member>
		<member name="P:System.Configuration.Provider.ProviderCollection.Count">
			<summary>Gets the number of providers in the collection.</summary>
			<returns>The number of providers in the collection.</returns>
		</member>
		<member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
			<summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
			<returns>false in all cases.</returns>
		</member>
		<member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
			<summary>Gets the provider with the specified name.</summary>
			<returns>The provider with the specified name.</returns>
			<param name="name">The key by which the provider is identified.</param>
		</member>
		<member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
			<summary>Gets the current object.</summary>
			<returns>The current object.</returns>
		</member>
		<member name="T:System.Configuration.Provider.ProviderException">
			<summary>The exception that is thrown when a configuration provider error has occurred. This exception class is also used by providers to throw exceptions when internal errors occur within the provider that do not map to other pre-existing exception classes.</summary>
		</member>
		<member name="M:System.Configuration.Provider.ProviderException.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException"></see> class.</summary>
		</member>
		<member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException"></see> class.</summary>
			<param name="message">A message describing why this <see cref="T:System.Configuration.Provider.ProviderException"></see> was thrown.</param>
		</member>
		<member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException"></see> class.</summary>
			<param name="context">Contextual information about the source or destination.</param>
			<param name="info">The object that holds the information to deserialize.</param>
		</member>
		<member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
			<summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException"></see> class.</summary>
			<param name="message">A message describing why this <see cref="T:System.Configuration.Provider.ProviderException"></see> was thrown.</param>
			<param name="innerException">The exception that caused this <see cref="T:System.Configuration.Provider.ProviderException"></see> to be thrown.</param>
		</member>
	</members>
</doc>